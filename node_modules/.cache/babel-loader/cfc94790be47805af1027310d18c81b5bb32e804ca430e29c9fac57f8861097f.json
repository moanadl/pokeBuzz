{"ast":null,"code":"import { useEffect, useState } from \"react\";\nexport const GetAPIData = async () => {\n  // const [pokemonEndpoint, setPokemonEndpoint] = useState([]);\n\n  // useEffect(() => {\n  //     getEndpoints();\n  // }, [])\n  try {\n    const endpointsPokemons = [];\n    for (let i = 1; i <= 6; i++) {\n      endpointsPokemons.push(`https://pokeapi.co/api/v2/pokemon/${i}`);\n    }\n\n    // console.log(endpointsPokemons);\n    return endpointsPokemons;\n  } catch (error) {\n    console.log('An erroroccured:', error);\n  }\n};\n\n// export default GetAPIData;\n_c = GetAPIData;\nvar _c;\n$RefreshReg$(_c, \"GetAPIData\");","map":{"version":3,"names":["useEffect","useState","GetAPIData","endpointsPokemons","i","push","error","console","log","_c","$RefreshReg$"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/services/index.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport const GetAPIData = async () => {\r\n    \r\n    // const [pokemonEndpoint, setPokemonEndpoint] = useState([]);\r\n    \r\n    // useEffect(() => {\r\n    //     getEndpoints();\r\n    // }, [])\r\n        try {\r\n            const endpointsPokemons = [];\r\n            \r\n            for (let i = 1; i <= 6; i++) {\r\n                endpointsPokemons.push(`https://pokeapi.co/api/v2/pokemon/${i}`);\r\n            }\r\n\r\n            // console.log(endpointsPokemons);\r\n            return endpointsPokemons;\r\n            \r\n        } catch (error) {\r\n            console.log('An erroroccured:', error);\r\n        }\r\n        \r\n  };\r\n\r\n// export default GetAPIData;\r\n  "],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAElC;;EAEA;EACA;EACA;EACI,IAAI;IACA,MAAMC,iBAAiB,GAAG,EAAE;IAE5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MACzBD,iBAAiB,CAACE,IAAI,CAAC,qCAAqCD,CAAC,EAAE,CAAC;IACpE;;IAEA;IACA,OAAOD,iBAAiB;EAE5B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,KAAK,CAAC;EAC1C;AAEN,CAAC;;AAEH;AAAAG,EAAA,GAvBaP,UAAU;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}