{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport PokeCard from \"../components/PokeCard\";\nimport './Home.css';\nimport { GetAPIData } from \"../services\";\nfunction Home() {\n  _s();\n  const [pokemonEndpoints, setPokemonEndpoints] = useState([]);\n  const [speciesEndpoints, setSpeciesEndpoints] = useState([]);\n  const [evolutionsEndpoints, setEvolutionEndpoints] = useState([]);\n  const [natureEndpoints, setNatureEndpoints] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const dataAPI = await GetAPIData();\n      setPokemonEndpoints(dataAPI.dataPokemon[0]);\n      setSpeciesEndpoints(dataAPI.dataSpecies[0]);\n      // const pokeEvolutions = dataAPI.dataEvolution[0].map(groups => {\n      //     return (\n      //         {\n      //             first: groups.data.chain.species.name ? groups.data.chain.species.name : null,\n      //             second: groups.data.chain.evolves_to[0].species.name ? groups.data.chain.evolves_to[0].species.name : null,\n      //             third: groups.data.chain.evolves_to[0].evolves_to[0] ? groups.data.chain.evolves_to[0].evolves_to[0].species.name : null\n      //         }\n      //     )\n      // })\n      // setEvolutionGroups(pokeEvolutions);\n      setEvolutionEndpoints(dataAPI.dataEvolution[0]);\n      setNatureEndpoints(dataAPI.dataNature[0]);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (pokemonEndpoints.length > 0 && speciesEndpoints.length > 0 && evolutionsEndpoints.length > 0 && natureEndpoints.length > 0) {\n      getAttributes();\n    }\n  }, [pokemonEndpoints, speciesEndpoints, evolutionsEndpoints, natureEndpoints]);\n  const getAttributes = () => {\n    const attributes = [];\n    const pokemonAttributes = pokemonEndpoints.map(endpoint => {\n      const pokemonData = endpoint.data;\n      return {\n        id: pokemonData.id,\n        name: pokemonData.name,\n        height: pokemonData.height,\n        weight: pokemonData.weight,\n        type1: pokemonData.types[0].type.name,\n        type2: pokemonData.types.lenght > 1 ? pokemonData.types[1].type.name : null,\n        image: pokemonData.sprites.other.dream_world.front_default\n      };\n    });\n    console.log(pokemonAttributes);\n  };\n  return;\n  // <div className=\"card-container\">\n  //     {pokeAttributes.map(pokeAttributes => {\n  //         return <PokeCard key={pokeAttributes.name} name={pokeAttributes.name} image={pokeAttributes.image}/>\n  //     })}\n  // </div>\n  // );\n}\n_s(Home, \"D0iQNLgiIdvVHCzNBSX1Ng4fRCk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["axios","useEffect","useState","PokeCard","GetAPIData","Home","_s","pokemonEndpoints","setPokemonEndpoints","speciesEndpoints","setSpeciesEndpoints","evolutionsEndpoints","setEvolutionEndpoints","natureEndpoints","setNatureEndpoints","fetchData","dataAPI","dataPokemon","dataSpecies","dataEvolution","dataNature","length","getAttributes","attributes","pokemonAttributes","map","endpoint","pokemonData","data","id","name","height","weight","type1","types","type","type2","lenght","image","sprites","other","dream_world","front_default","console","log","_c","$RefreshReg$"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/pages/Home.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport PokeCard from \"../components/PokeCard\";\r\nimport './Home.css'\r\nimport { GetAPIData } from \"../services\";\r\n\r\nfunction Home () {    \r\n    \r\n    const [pokemonEndpoints, setPokemonEndpoints] = useState([]);\r\n    const [speciesEndpoints,setSpeciesEndpoints] = useState([]);\r\n    const [evolutionsEndpoints, setEvolutionEndpoints] = useState([]);\r\n    const [natureEndpoints, setNatureEndpoints] = useState([]);\r\n    \r\n    useEffect(() => {\r\n            const fetchData = async () => {\r\n            const dataAPI = await GetAPIData();\r\n            setPokemonEndpoints(dataAPI.dataPokemon[0]);\r\n            setSpeciesEndpoints(dataAPI.dataSpecies[0]);\r\n            // const pokeEvolutions = dataAPI.dataEvolution[0].map(groups => {\r\n            //     return (\r\n            //         {\r\n            //             first: groups.data.chain.species.name ? groups.data.chain.species.name : null,\r\n            //             second: groups.data.chain.evolves_to[0].species.name ? groups.data.chain.evolves_to[0].species.name : null,\r\n            //             third: groups.data.chain.evolves_to[0].evolves_to[0] ? groups.data.chain.evolves_to[0].evolves_to[0].species.name : null\r\n            //         }\r\n            //     )\r\n            // })\r\n            // setEvolutionGroups(pokeEvolutions);\r\n            setEvolutionEndpoints(dataAPI.dataEvolution[0])\r\n            setNatureEndpoints(dataAPI.dataNature[0]);\r\n        };\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (pokemonEndpoints.length > 0 \r\n            && speciesEndpoints.length > 0 \r\n            && evolutionsEndpoints.length > 0 \r\n            && natureEndpoints.length > 0 ) {\r\n                getAttributes();\r\n        }\r\n    }, [pokemonEndpoints, speciesEndpoints, evolutionsEndpoints, natureEndpoints]);\r\n\r\n    const getAttributes = () => {\r\n        const attributes = [];\r\n\r\n        const pokemonAttributes = pokemonEndpoints.map(endpoint => {\r\n            const pokemonData = endpoint.data;\r\n            return {\r\n                id: pokemonData.id,\r\n                name: pokemonData.name,\r\n                height: pokemonData.height,\r\n                weight: pokemonData.weight,\r\n                type1: pokemonData.types[0].type.name,\r\n                type2: pokemonData.types.lenght > 1 ? pokemonData.types[1].type.name : null,\r\n                image: pokemonData.sprites.other.dream_world.front_default,\r\n            }\r\n        })\r\n\r\n        console.log(pokemonAttributes)\r\n    }\r\n\r\n\treturn\r\n        // <div className=\"card-container\">\r\n        //     {pokeAttributes.map(pokeAttributes => {\r\n        //         return <PokeCard key={pokeAttributes.name} name={pokeAttributes.name} image={pokeAttributes.image}/>\r\n        //     })}\r\n        // </div>\r\n    // );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAO,YAAY;AACnB,SAASC,UAAU,QAAQ,aAAa;AAExC,SAASC,IAAIA,CAAA,EAAI;EAAAC,EAAA;EAEb,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACO,gBAAgB,EAACC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC3D,MAAM,CAACS,mBAAmB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACjE,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACR,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,OAAO,GAAG,MAAMZ,UAAU,CAAC,CAAC;MAClCI,mBAAmB,CAACQ,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;MAC3CP,mBAAmB,CAACM,OAAO,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC;MAC3C;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAN,qBAAqB,CAACI,OAAO,CAACG,aAAa,CAAC,CAAC,CAAC,CAAC;MAC/CL,kBAAkB,CAACE,OAAO,CAACI,UAAU,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IAEDL,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACZ,IAAIM,gBAAgB,CAACc,MAAM,GAAG,CAAC,IACxBZ,gBAAgB,CAACY,MAAM,GAAG,CAAC,IAC3BV,mBAAmB,CAACU,MAAM,GAAG,CAAC,IAC9BR,eAAe,CAACQ,MAAM,GAAG,CAAC,EAAG;MAC5BC,aAAa,CAAC,CAAC;IACvB;EACJ,CAAC,EAAE,CAACf,gBAAgB,EAAEE,gBAAgB,EAAEE,mBAAmB,EAAEE,eAAe,CAAC,CAAC;EAE9E,MAAMS,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMC,UAAU,GAAG,EAAE;IAErB,MAAMC,iBAAiB,GAAGjB,gBAAgB,CAACkB,GAAG,CAACC,QAAQ,IAAI;MACvD,MAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAI;MACjC,OAAO;QACHC,EAAE,EAAEF,WAAW,CAACE,EAAE;QAClBC,IAAI,EAAEH,WAAW,CAACG,IAAI;QACtBC,MAAM,EAAEJ,WAAW,CAACI,MAAM;QAC1BC,MAAM,EAAEL,WAAW,CAACK,MAAM;QAC1BC,KAAK,EAAEN,WAAW,CAACO,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAACL,IAAI;QACrCM,KAAK,EAAET,WAAW,CAACO,KAAK,CAACG,MAAM,GAAG,CAAC,GAAGV,WAAW,CAACO,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAACL,IAAI,GAAG,IAAI;QAC3EQ,KAAK,EAAEX,WAAW,CAACY,OAAO,CAACC,KAAK,CAACC,WAAW,CAACC;MACjD,CAAC;IACL,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAACpB,iBAAiB,CAAC;EAClC,CAAC;EAEJ;EACO;EACA;EACA;EACA;EACA;EACJ;AACJ;AAAClB,EAAA,CAhEQD,IAAI;AAAAwC,EAAA,GAAJxC,IAAI;AAkEb,eAAeA,IAAI;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}