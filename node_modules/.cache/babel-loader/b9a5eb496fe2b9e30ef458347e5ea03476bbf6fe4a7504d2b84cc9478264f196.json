{"ast":null,"code":"var _jsxFileName = \"C:\\\\Moana_SSD\\\\WebDev\\\\Projetos\\\\pokebuzz\\\\src\\\\components\\\\PokemonResults\\\\index.jsx\";\nimport PokeCard from \"../PokeCard\";\n\n// ---------- Finds the final 6 pokemons and render them ---------- //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokemonResults(props) {\n  let chosenPokemon = [];\n  const chosenPokemonEvolutionsIndex = [];\n  let indexFinalScore = 0;\n  let numOfColors = 9;\n  const colors = ['Black', 'Blue', 'Brown', 'Gray', 'Green', 'Pink', 'Purple', 'Red', 'Yellow', 'White'];\n  const randomColor = () => {\n    let rdmNum = Math.floor(Math.random() * numOfColors);\n    return colors[rdmNum];\n  };\n\n  // ----- While the number of pokemon is smaller than 6, do the loop -----\n  while (chosenPokemon.length < 6) {\n    let alternativeColor = randomColor();\n    const possiblePokemon = props.pokemonAttributes.filter(attr => attr.type1 === props.finalScore[indexFinalScore].type_habitat || attr.type2 === props.finalScore[indexFinalScore].type_habitat || attr.habitat === props.finalScore[indexFinalScore].type_habitat).filter(pokeColor => pokeColor.color === props.formAnswers.color || pokeColor.color === alternativeColor);\n\n    // colocar para shuffle cores tbm\n\n    let possiblePokemonCopy = possiblePokemon.map(x => x);\n    const shuffle = myArray => {\n      for (let i = myArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [myArray[i], myArray[j]] = [myArray[j], myArray[i]];\n      }\n      return myArray;\n    };\n    const possiblePokemonShuffled = shuffle(possiblePokemonCopy);\n    console.log('possiblePokemonShuffled', possiblePokemonShuffled);\n    for (let pokemonIndex in possiblePokemonShuffled) {\n      let currentPokemon = possiblePokemonShuffled[pokemonIndex].name;\n      let pokemonID = possiblePokemonShuffled[pokemonIndex].id;\n      console.log('currentPokemon', currentPokemon);\n      let evolutionsIndex = props.evolutionsGroups.findIndex(evolution => evolution.first === currentPokemon || evolution.second === currentPokemon || evolution.third === currentPokemon);\n      if (pokemonID === 144 || pokemonID === 145 || pokemonID === 146 || pokemonID === 149) {\n        console.log('Pokemon muito raro!!');\n        continue;\n      }\n      if (evolutionsIndex !== -1) {\n        if (chosenPokemonEvolutionsIndex.includes(evolutionsIndex)) {\n          console.log('Já tem uma evolução!');\n          continue;\n        }\n      } else {\n        if (chosenPokemonEvolutionsIndex.includes(currentPokemon)) {\n          console.log('Já tem esse Pokémon!');\n          continue;\n        }\n      }\n      chosenPokemon = [...chosenPokemon, possiblePokemonShuffled[pokemonIndex]];\n      chosenPokemonEvolutionsIndex.push(evolutionsIndex);\n      if (chosenPokemon.length === 6) {\n        break;\n      }\n    }\n    indexFinalScore++;\n  }\n  console.log('SAIU DO WHILE!!!!!!!');\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: chosenPokemon.map(attr => {\n        return /*#__PURE__*/_jsxDEV(PokeCard, {\n          name: attr.name,\n          image: attr.image\n        }, attr.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 3\n  }, this);\n}\n_c = PokemonResults;\nexport default PokemonResults;\nvar _c;\n$RefreshReg$(_c, \"PokemonResults\");","map":{"version":3,"names":["PokeCard","jsxDEV","_jsxDEV","PokemonResults","props","chosenPokemon","chosenPokemonEvolutionsIndex","indexFinalScore","numOfColors","colors","randomColor","rdmNum","Math","floor","random","length","alternativeColor","possiblePokemon","pokemonAttributes","filter","attr","type1","finalScore","type_habitat","type2","habitat","pokeColor","color","formAnswers","possiblePokemonCopy","map","x","shuffle","myArray","i","j","possiblePokemonShuffled","console","log","pokemonIndex","currentPokemon","name","pokemonID","id","evolutionsIndex","evolutionsGroups","findIndex","evolution","first","second","third","includes","push","children","className","image","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/components/PokemonResults/index.jsx"],"sourcesContent":["import PokeCard from \"../PokeCard\";\r\n\r\n// ---------- Finds the final 6 pokemons and render them ---------- //\r\nfunction PokemonResults (props) {\r\n    \r\n    let chosenPokemon = [];\r\n    const chosenPokemonEvolutionsIndex = [];\r\n    let indexFinalScore = 0;\r\n    let numOfColors = 9;\r\n    const colors = ['Black', 'Blue', 'Brown', 'Gray', 'Green', 'Pink', 'Purple', 'Red', 'Yellow', 'White'];\r\n\r\n    const randomColor = () => {\r\n        let rdmNum = Math.floor(Math.random() * numOfColors);\r\n        return colors[rdmNum];\r\n    }\r\n    \r\n    // ----- While the number of pokemon is smaller than 6, do the loop -----\r\n    while (chosenPokemon.length < 6 ) {\r\n\r\n        let alternativeColor = randomColor();\r\n\r\n        const possiblePokemon = props.pokemonAttributes.filter(\r\n            attr => attr.type1 === props.finalScore[indexFinalScore].type_habitat || \r\n            attr.type2 === props.finalScore[indexFinalScore].type_habitat || \r\n            attr.habitat === props.finalScore[indexFinalScore].type_habitat)\r\n            .filter(pokeColor => pokeColor.color === props.formAnswers.color ||\r\n            pokeColor.color === alternativeColor);\r\n\r\n        // colocar para shuffle cores tbm\r\n\r\n        let possiblePokemonCopy = possiblePokemon.map((x) => x);\r\n           \r\n        const shuffle = (myArray) => { \r\n            for (let i = myArray.length - 1; i > 0; i--) { \r\n                const j = Math.floor(Math.random() * (i + 1)); \r\n                [myArray[i], myArray[j]] = [myArray[j], myArray[i]]; \r\n            } \r\n            return myArray; \r\n        }; \r\n\r\n        const possiblePokemonShuffled = shuffle(possiblePokemonCopy);\r\n        console.log('possiblePokemonShuffled', possiblePokemonShuffled)\r\n\r\n        for (let pokemonIndex in possiblePokemonShuffled) {\r\n            let currentPokemon = possiblePokemonShuffled[pokemonIndex].name;\r\n            let pokemonID = possiblePokemonShuffled[pokemonIndex].id;\r\n            console.log('currentPokemon', currentPokemon);\r\n            let evolutionsIndex = props.evolutionsGroups.findIndex(evolution => evolution.first === currentPokemon || evolution.second === currentPokemon || evolution.third === currentPokemon );\r\n  \r\n            if (pokemonID === 144 || pokemonID === 145 || pokemonID === 146 || pokemonID === 149) {\r\n                console.log('Pokemon muito raro!!');\r\n                continue\r\n            }\r\n\r\n            if (evolutionsIndex !== -1) { \r\n                if (chosenPokemonEvolutionsIndex.includes(evolutionsIndex)) {\r\n                    console.log('Já tem uma evolução!')\r\n                    continue\r\n                }\r\n            } else {\r\n                if (chosenPokemonEvolutionsIndex.includes(currentPokemon)) {\r\n                    console.log('Já tem esse Pokémon!')\r\n                    continue\r\n                }\r\n            }\r\n\r\n            chosenPokemon = [...chosenPokemon, possiblePokemonShuffled[pokemonIndex]]\r\n            chosenPokemonEvolutionsIndex.push(evolutionsIndex);\r\n            \r\n            if (chosenPokemon.length === 6) {\r\n                break\r\n            }\r\n\r\n        }\r\n        indexFinalScore++\r\n    }\r\n    console.log('SAIU DO WHILE!!!!!!!')\r\n\r\n\r\n\treturn (\r\n\t\t<section>\r\n                <div className=\"card-container\">\r\n                {chosenPokemon.map(attr => {\r\n                return <PokeCard key={attr.name} name={attr.name} image={attr.image}/>\r\n                })}\r\n                </div>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default PokemonResults;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}