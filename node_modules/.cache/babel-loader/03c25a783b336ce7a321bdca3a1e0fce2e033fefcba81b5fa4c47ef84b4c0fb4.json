{"ast":null,"code":"var _jsxFileName = \"C:\\\\Moana_SSD\\\\WebDev\\\\Projetos\\\\pokebuzz\\\\src\\\\components\\\\Question\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Option from \"../Option\";\nimport questionOptions from '../../data/questionOptions.json';\nimport questionNameMap from '../../data/questionNameMap.json';\n\n// ---------- Renders each question of the Form ---------- //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Question({\n  label,\n  index,\n  getFormAnswers\n}) {\n  _s();\n  const [answer, setAnswer] = useState('');\n  console.log(questionNameMap);\n\n  // const questionNameMap = {\n  //     colorOptions: 'color',\n  //     transportationOptions: 'transportation',\n  //     settingOptions: 'setting',\n  //     naturalPhenomenonOptions: 'naturalPhenomenon',\n  //     activityOptions: 'activity',\n  //     chillOptions: 'placeToChill',\n  //     taylorOptions: 'taylorAlbum'\n  // };\n\n  const optionKey = Object.keys(questionOptions)[index];\n  const questionName = questionNameMap[optionKey];\n  const handleChange = e => {\n    const selectedOption = e.target.value;\n    setAnswer(selectedOption);\n    getFormAnswers({\n      [questionName]: selectedOption\n    }); // From Form component\n  };\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), questionOptions[optionKey].map(option => /*#__PURE__*/_jsxDEV(Option, {\n      id: `option-${option.toLowerCase().replace(/\\s/g, '')}`,\n      name: Object.keys(option)[index],\n      value: option.toLowerCase().replace(/\\s/g, ''),\n      content: option,\n      getData: handleChange\n    }, `option-${option.toLowerCase().replace(/\\s/g, '')}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this);\n}\n_s(Question, \"epwReYWmqQUcEJwlNWWu20QHlN0=\");\n_c = Question;\nexport default Question;\n\n// Tentar colocar todas as respostas em um objeto ao invés de estados individuais. Fazer tipo foi feito no Form, mas fazer direto aqui, sem precisar mandar tanta variável para o Form.\n// Encurtar caminhos, otimizar processos, reduzir código. KISS.\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["useState","useEffect","Option","questionOptions","questionNameMap","jsxDEV","_jsxDEV","Question","label","index","getFormAnswers","_s","answer","setAnswer","console","log","optionKey","Object","keys","questionName","handleChange","e","selectedOption","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","id","toLowerCase","replace","name","content","getData","_c","$RefreshReg$"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/components/Question/index.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Option from \"../Option\";\r\nimport questionOptions from '../../data/questionOptions.json';\r\nimport questionNameMap from '../../data/questionNameMap.json';\r\n\r\n// ---------- Renders each question of the Form ---------- //\r\nfunction Question ({ label, index, getFormAnswers }) {\r\n\r\n    const [answer, setAnswer] = useState('');\r\n    console.log(questionNameMap)\r\n\r\n    // const questionNameMap = {\r\n    //     colorOptions: 'color',\r\n    //     transportationOptions: 'transportation',\r\n    //     settingOptions: 'setting',\r\n    //     naturalPhenomenonOptions: 'naturalPhenomenon',\r\n    //     activityOptions: 'activity',\r\n    //     chillOptions: 'placeToChill',\r\n    //     taylorOptions: 'taylorAlbum'\r\n    // };\r\n\r\n    const optionKey = Object.keys(questionOptions)[index];\r\n    const questionName = questionNameMap[optionKey];\r\n\r\n    const handleChange = e => {\r\n        const selectedOption = e.target.value;\r\n        setAnswer(selectedOption);\r\n        getFormAnswers({ [questionName]: selectedOption }); // From Form component\r\n    }\r\n\r\n\treturn (\r\n            <fieldset>\r\n                <legend>{label}</legend>\r\n                {questionOptions[optionKey].map(option => \r\n                    <Option \r\n                        key={`option-${option.toLowerCase().replace(/\\s/g, '')}`} \r\n                        id={`option-${option.toLowerCase().replace(/\\s/g, '')}`} \r\n                        name={Object.keys(option)[index]} \r\n                        value={option.toLowerCase().replace(/\\s/g, '')} \r\n                        content={option} \r\n                        getData={handleChange} />\r\n                )}\r\n            </fieldset>\r\n\t)\r\n}\r\n\r\nexport default Question;\r\n\r\n// Tentar colocar todas as respostas em um objeto ao invés de estados individuais. Fazer tipo foi feito no Form, mas fazer direto aqui, sem precisar mandar tanta variável para o Form.\r\n// Encurtar caminhos, otimizar processos, reduzir código. KISS.\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,eAAe,MAAM,iCAAiC;;AAE7D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,QAAQA,CAAE;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAEjD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxCc,OAAO,CAACC,GAAG,CAACX,eAAe,CAAC;;EAE5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMY,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACf,eAAe,CAAC,CAACM,KAAK,CAAC;EACrD,MAAMU,YAAY,GAAGf,eAAe,CAACY,SAAS,CAAC;EAE/C,MAAMI,YAAY,GAAGC,CAAC,IAAI;IACtB,MAAMC,cAAc,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IACrCX,SAAS,CAACS,cAAc,CAAC;IACzBZ,cAAc,CAAC;MAAE,CAACS,YAAY,GAAGG;IAAe,CAAC,CAAC,CAAC,CAAC;EACxD,CAAC;EAEJ,oBACWhB,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAASjB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,EACvB1B,eAAe,CAACa,SAAS,CAAC,CAACc,GAAG,CAACC,MAAM,iBAClCzB,OAAA,CAACJ,MAAM;MAEH8B,EAAE,EAAE,UAAUD,MAAM,CAACE,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAG;MACxDC,IAAI,EAAElB,MAAM,CAACC,IAAI,CAACa,MAAM,CAAC,CAACtB,KAAK,CAAE;MACjCe,KAAK,EAAEO,MAAM,CAACE,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAE;MAC/CE,OAAO,EAAEL,MAAO;MAChBM,OAAO,EAAEjB;IAAa,GALjB,UAAUW,MAAM,CAACE,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKhC,CAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEvB;AAAClB,EAAA,CAtCQJ,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAwCjB,eAAeA,QAAQ;;AAEvB;AACA;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}