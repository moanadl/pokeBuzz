{"ast":null,"code":"var _jsxFileName = \"C:\\\\Moana_SSD\\\\WebDev\\\\Projetos\\\\pokebuzz\\\\src\\\\components\\\\Form\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { getResults } from \"../../services/results\";\nimport Question from \"../Question\";\nimport questionsData from '../../data/questionsData.json';\nimport './Form.css';\n\n// ---------- Renders the Form ---------- //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form(props) {\n  _s();\n  console.log(questionsData[index]);\n  // const questions =  JSON.parse(questionsData)\n  // const questions = [\n  // \t{ key: 'color', label: 'Choose a color'},\n  // \t{ key: 'transportation', label: 'Choose a transportation'},\n  // \t{ key: 'setting', label: 'Choose a setting'},\n  // \t{ key: 'naturalPhenomenon', label: 'Choose a natural phenomenon'},\n  // \t{ key: 'activity', label: 'Choose something to do'},\n  // \t{ key: 'placeToChill', label: 'Choose a place to chill'},\n  // \t{ key: 'taylorAlbum', label: 'Choose a Taylor Swift album'},\n  // ];\n\n  // ----- Creating the state for the form answers -----\n  const [formAnswers, setFormAnswers] = useState(() => {\n    Object.fromEntries(questions.map(key => [key, '']));\n  });\n\n  // ----- Gets the value of each radio button from the component Question to set the formAnswers -----\n  const getFormAnswers = partialAnswer => {\n    setFormAnswers(prev => ({\n      ...prev,\n      ...partialAnswer\n    }));\n  };\n\n  // ----- On form submission -----\n  const sendFormAnswers = e => {\n    e.preventDefault();\n    // ----- Calls the imported function getResults to calculate the results of the quiz for type/habitat -----\n    const finalScore = getResults(formAnswers);\n    // ----- Calls the prop function getFormResults with the calculated result for type/habitat and the form answers -----\n    props.getFormResults(finalScore, formAnswers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"form-title\",\n      children: [\"Find out your six\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"images/logo-pokemon.png\",\n        alt: \"Pok\\xE9mon logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendFormAnswers,\n      children: [questions.map((question, index) => /*#__PURE__*/_jsxDEV(Question, {\n        label: `${question.label}:`,\n        index: index,\n        getFormAnswers: getFormAnswers\n      }, question.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 6\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Catch 'em!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n_s(Form, \"O1cS6fd7mRPDKUeGVV8QE0c9WWk=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","getResults","Question","questionsData","jsxDEV","_jsxDEV","Form","props","_s","console","log","index","formAnswers","setFormAnswers","Object","fromEntries","questions","map","key","getFormAnswers","partialAnswer","prev","sendFormAnswers","e","preventDefault","finalScore","getFormResults","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","question","label","_c","$RefreshReg$"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/components/Form/index.jsx"],"sourcesContent":["import {useState } from \"react\";\r\nimport { getResults } from \"../../services/results\";\r\nimport Question from \"../Question\";\r\nimport questionsData from '../../data/questionsData.json';\r\nimport './Form.css'\r\n\r\n// ---------- Renders the Form ---------- //\r\nfunction Form (props) {\r\n\r\n\tconsole.log(questionsData[index])\r\n\t// const questions =  JSON.parse(questionsData)\r\n\t// const questions = [\r\n\t// \t{ key: 'color', label: 'Choose a color'},\r\n\t// \t{ key: 'transportation', label: 'Choose a transportation'},\r\n\t// \t{ key: 'setting', label: 'Choose a setting'},\r\n\t// \t{ key: 'naturalPhenomenon', label: 'Choose a natural phenomenon'},\r\n\t// \t{ key: 'activity', label: 'Choose something to do'},\r\n\t// \t{ key: 'placeToChill', label: 'Choose a place to chill'},\r\n\t// \t{ key: 'taylorAlbum', label: 'Choose a Taylor Swift album'},\r\n\t// ];\r\n\r\n\t// ----- Creating the state for the form answers -----\r\n\tconst [formAnswers, setFormAnswers] = useState(() => {\r\n\t\tObject.fromEntries(questions.map(key => [key, '']));\r\n\t});\r\n\r\n\t// ----- Gets the value of each radio button from the component Question to set the formAnswers -----\r\n\tconst getFormAnswers = (partialAnswer) => {\r\n        setFormAnswers((prev) => ({\r\n            ...prev,\r\n\t\t\t...partialAnswer\r\n        }));\r\n\t}\r\n\r\n\t// ----- On form submission -----\r\n\tconst sendFormAnswers = (e) => {\r\n\t\te.preventDefault();\r\n\t\t// ----- Calls the imported function getResults to calculate the results of the quiz for type/habitat -----\r\n\t\tconst finalScore = getResults(formAnswers);\r\n\t\t// ----- Calls the prop function getFormResults with the calculated result for type/habitat and the form answers -----\r\n\t\tprops.getFormResults(finalScore, formAnswers);\r\n\t}\r\n    \r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<h1 className=\"form-title\">\r\n\t\t\t\tFind out your six\r\n                <img src=\"images/logo-pokemon.png\" alt=\"PokÃ©mon logo\" />\r\n            </h1>\r\n\r\n\t\t\t<form onSubmit={sendFormAnswers}>\r\n\t\t\t\t{questions.map((question, index) => \r\n\t\t\t\t\t<Question \r\n\t\t\t\t\t\tkey={question.key} \r\n\t\t\t\t\t\tlabel={`${question.label}:`} \r\n\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\tgetFormAnswers={getFormAnswers} /> \r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<button>Catch 'em!</button>\r\n\t\t\t</form>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAQ,OAAO;AAC/B,SAASC,UAAU,QAAQ,wBAAwB;AACnD,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAO,YAAY;;AAEnB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,IAAIA,CAAEC,KAAK,EAAE;EAAAC,EAAA;EAErBC,OAAO,CAACC,GAAG,CAACP,aAAa,CAACQ,KAAK,CAAC,CAAC;EACjC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,MAAM;IACpDc,MAAM,CAACC,WAAW,CAACC,SAAS,CAACC,GAAG,CAACC,GAAG,IAAI,CAACA,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;EACpD,CAAC,CAAC;;EAEF;EACA,MAAMC,cAAc,GAAIC,aAAa,IAAK;IACnCP,cAAc,CAAEQ,IAAI,KAAM;MACtB,GAAGA,IAAI;MAChB,GAAGD;IACE,CAAC,CAAC,CAAC;EACV,CAAC;;EAED;EACA,MAAME,eAAe,GAAIC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,MAAMC,UAAU,GAAGxB,UAAU,CAACW,WAAW,CAAC;IAC1C;IACAL,KAAK,CAACmB,cAAc,CAACD,UAAU,EAAEb,WAAW,CAAC;EAC9C,CAAC;EAED,oBACCP,OAAA;IAAAsB,QAAA,gBACCtB,OAAA;MAAIuB,SAAS,EAAC,YAAY;MAAAD,QAAA,GAAC,mBAEd,eAAAtB,OAAA;QAAKwB,GAAG,EAAC,yBAAyB;QAACC,GAAG,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,eAEd7B,OAAA;MAAM8B,QAAQ,EAAEb,eAAgB;MAAAK,QAAA,GAC9BX,SAAS,CAACC,GAAG,CAAC,CAACmB,QAAQ,EAAEzB,KAAK,kBAC9BN,OAAA,CAACH,QAAQ;QAERmC,KAAK,EAAE,GAAGD,QAAQ,CAACC,KAAK,GAAI;QAC5B1B,KAAK,EAAEA,KAAM;QACbQ,cAAc,EAAEA;MAAe,GAH1BiB,QAAQ,CAAClB,GAAG;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGgB,CACnC,CAAC,eAED7B,OAAA;QAAAsB,QAAA,EAAQ;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEZ;AAAC1B,EAAA,CAxDQF,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AA0Db,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}