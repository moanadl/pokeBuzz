{"ast":null,"code":"import questionOptions from '../data/questionOptions.json';\nexport const findPokemon = props => {\n  const {\n    finalScore,\n    formAnswers,\n    pokemonAttributes,\n    evolutionsGroups\n  } = props;\n  let chosenPokemon = [];\n  const chosenEvolutions = new Set();\n  const forbiddenIDs = new Set([144, 145, 146, 149]); // Articuno, Zapdos, Moltres, Dragonite\n\n  const colors = questionOptions.colorOptions.map(color => color.toLowerCase());\n  const primaryColor = formAnswers.color.toLowerCase();\n  const getRandomAltColor = () => {\n    const altColorOptions = colors.filter(color => color !== primaryColor);\n    let rdmIndex = Math.floor(Math.random() * altColorOptions.length);\n    return altColorOptions[rdmIndex];\n  };\n  const shuffle = myArray => {\n    const array = [...myArray];\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    ;\n    return array;\n  };\n  let scoreIndex = 0;\n\n  // ----- While the number of pokemon is smaller than 6, do the loop -----\n  while (chosenPokemon.length < 6) {\n    const targetType = finalScore[scoreIndex].type;\n    let altColor = getRandomAltColor();\n    const candidates = pokemonAttributes.filter(attr => (attr.type1 === targetType || attr.type2 === targetType || attr.habitat === targetType) && (attr.color === primaryColor || attr.color === altColor));\n    const shuffledCandidates = shuffle(candidates);\n    for (const pokemon of shuffledCandidates) {\n      // Não executa caso array venha vazio\n      const {\n        id,\n        name\n      } = pokemon;\n\n      // Checks for rare Pokémon\n      if (forbiddenIDs.has(id)) continue;\n\n      // Checks for repeated Pokémon or Pokémon from the same evolution group\n      const evolutionsIndex = evolutionsGroups.findIndex(evolution => evolution.first === name || evolution.second === name || evolution.third === name);\n      const evolutionKey = evolutionsIndex !== -1 ? `evol-${evolutionsIndex}` : `poke-${name}`;\n      if (chosenEvolutions.has(evolutionKey)) {\n        console.log('Já tem essa evolução ou esse Pokémon:', name);\n        continue;\n      }\n      chosenPokemon.push(pokemon);\n      chosenEvolutions.add(evolutionKey);\n      console.log(chosenEvolutions);\n      if (chosenPokemon.length === 6) {\n        break;\n      }\n    }\n    scoreIndex++;\n  }\n  return chosenPokemon;\n};","map":{"version":3,"names":["questionOptions","findPokemon","props","finalScore","formAnswers","pokemonAttributes","evolutionsGroups","chosenPokemon","chosenEvolutions","Set","forbiddenIDs","colors","colorOptions","map","color","toLowerCase","primaryColor","getRandomAltColor","altColorOptions","filter","rdmIndex","Math","floor","random","length","shuffle","myArray","array","i","j","scoreIndex","targetType","type","altColor","candidates","attr","type1","type2","habitat","shuffledCandidates","pokemon","id","name","has","evolutionsIndex","findIndex","evolution","first","second","third","evolutionKey","console","log","push","add"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/utils/findPokemon.js"],"sourcesContent":["import questionOptions from '../data/questionOptions.json';\r\n\r\nexport const findPokemon = (props) => {\r\n\r\n    const { finalScore, formAnswers, pokemonAttributes, evolutionsGroups } = props;\r\n \r\n    let chosenPokemon = [];\r\n    const chosenEvolutions = new Set();\r\n    const forbiddenIDs = new Set([144, 145, 146, 149]); // Articuno, Zapdos, Moltres, Dragonite\r\n\r\n    const colors = questionOptions.colorOptions.map(color => color.toLowerCase());\r\n    const primaryColor = formAnswers.color.toLowerCase();\r\n\r\n    const getRandomAltColor = () => {\r\n        const altColorOptions = colors.filter(color => color !== primaryColor);\r\n        let rdmIndex = Math.floor(Math.random() * altColorOptions.length);\r\n        return altColorOptions[rdmIndex];\r\n    }\r\n\r\n    const shuffle = (myArray) => { \r\n        const array = [...myArray];\r\n\r\n        for (let i = array.length - 1; i > 0; i--) { \r\n            const j = Math.floor(Math.random() * (i + 1)); \r\n            [array[i], array[j]] = [array[j], array[i]]; \r\n        };\r\n\r\n        return array; \r\n    }; \r\n    \r\n    let scoreIndex = 0;\r\n\r\n    // ----- While the number of pokemon is smaller than 6, do the loop -----\r\n    while (chosenPokemon.length < 6 ) {\r\n\r\n        const targetType = finalScore[scoreIndex].type;\r\n        let altColor = getRandomAltColor();\r\n\r\n        const candidates = pokemonAttributes.filter(attr => \r\n            (attr.type1 === targetType || attr.type2 === targetType || attr.habitat === targetType) && \r\n            (attr.color === primaryColor || attr.color === altColor))\r\n\r\n        const shuffledCandidates = shuffle(candidates);\r\n\r\n        for (const pokemon of shuffledCandidates) { // Não executa caso array venha vazio\r\n            const { id, name } = pokemon;\r\n\r\n            // Checks for rare Pokémon\r\n            if (forbiddenIDs.has(id)) continue;\r\n\r\n            // Checks for repeated Pokémon or Pokémon from the same evolution group\r\n            const evolutionsIndex = evolutionsGroups.findIndex(\r\n                evolution => evolution.first === name || \r\n                evolution.second === name || \r\n                evolution.third === name\r\n            );\r\n\r\n            const evolutionKey = evolutionsIndex !== -1 ? `evol-${evolutionsIndex}` : `poke-${name}`;\r\n\r\n            if (chosenEvolutions.has(evolutionKey)) {\r\n                console.log('Já tem essa evolução ou esse Pokémon:', name);\r\n                continue;\r\n            }\r\n\r\n            chosenPokemon.push(pokemon);\r\n            chosenEvolutions.add(evolutionKey);\r\n            console.log(chosenEvolutions);\r\n            \r\n            if (chosenPokemon.length === 6) {\r\n                break\r\n            }\r\n\r\n        }\r\n        scoreIndex++\r\n    }\r\n\r\n\treturn chosenPokemon;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}