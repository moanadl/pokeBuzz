{"ast":null,"code":"var _jsxFileName = \"C:\\\\Moana_SSD\\\\WebDev\\\\Projetos\\\\pokebuzz\\\\src\\\\components\\\\PokemonResults\\\\index.jsx\";\nimport PokeCard from \"../PokeCard\";\n\n// ---------- Finds the final 6 pokemons and render them ---------- //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokemonResults(props) {\n  let chosenPokemon = [];\n  const chosenPokemonControl = [];\n  let indexFinalScore = 0;\n\n  // ----- While the number of pokemon is smaller than 6, do the loop -----\n  while (chosenPokemon.length < 6) {\n    const possiblePokemon = props.pokemonAttributes.filter(attr => attr.type1 === props.finalScore[indexFinalScore].type_habitat || attr.type2 === props.finalScore[indexFinalScore].type_habitat || attr.habitat === props.finalScore[indexFinalScore].type_habitat).filter(pokeColor => pokeColor.color === props.formAnswers.color || pokeColor.color === 'yellow');\n\n    // colocar para shuffle cores tbm\n\n    let possiblePokemonCopy = possiblePokemon.map(x => x);\n    const shuffle = myArray => {\n      for (let i = myArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [myArray[i], myArray[j]] = [myArray[j], myArray[i]];\n      }\n      return myArray;\n    };\n    const possiblePokemonShuffled = shuffle(possiblePokemonCopy);\n    console.log('possiblePokemonShuffled', possiblePokemonShuffled);\n    for (let pokemonIndex in possiblePokemonShuffled) {\n      console.log('pokemonIndex', pokemonIndex);\n      let currentPokemon = possiblePokemonShuffled[pokemonIndex].name;\n      let pokemonID = possiblePokemonShuffled[pokemonIndex].id;\n      console.log('currentPokemon', currentPokemon);\n      let evolutionsIndex = props.evolutionsGroups.findIndex(evolution => evolution.first === currentPokemon || evolution.second === currentPokemon || evolution.third === currentPokemon);\n      console.log('índice da evolução', evolutionsIndex);\n      if (pokemonID === 144 || pokemonID === 145 || pokemonID === 146 || pokemonID === 149) {\n        console.log('Pokemon muito raro!!');\n        continue;\n      }\n      if (evolutionsIndex !== -1) {\n        // colocar alguma forma de condicional para impedir de repetir pokemon\n        if (chosenPokemonControl.includes(evolutionsIndex)) {\n          console.log('Já tem uma evolução!');\n          continue;\n        }\n      } else {\n        if (chosenPokemonControl.includes(currentPokemon)) {\n          console.log('Já tem esse Pokémon!');\n          continue;\n        }\n      }\n      chosenPokemon = [...chosenPokemon, possiblePokemonShuffled[pokemonIndex]];\n      console.log('chosenPokemon', chosenPokemon);\n      // chosenPokemonControl.push(possiblePokemonShuffled[pokemonIndex].name);\n      chosenPokemonControl.push(evolutionsIndex);\n      console.log('chosenPokemonControl', chosenPokemonControl);\n      console.log('indexFinalScore', indexFinalScore);\n      console.log(chosenPokemon.length);\n      if (chosenPokemon.length === 6) {\n        break;\n      }\n    }\n    indexFinalScore++;\n  }\n  console.log('SAIU DO WHILE!!!!!!!');\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: chosenPokemon.map(pokeAttributes => {\n        return /*#__PURE__*/_jsxDEV(PokeCard, {\n          name: pokeAttributes.name,\n          image: pokeAttributes.image\n        }, pokeAttributes.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 3\n  }, this);\n}\n_c = PokemonResults;\nexport default PokemonResults;\nvar _c;\n$RefreshReg$(_c, \"PokemonResults\");","map":{"version":3,"names":["PokeCard","jsxDEV","_jsxDEV","PokemonResults","props","chosenPokemon","chosenPokemonControl","indexFinalScore","length","possiblePokemon","pokemonAttributes","filter","attr","type1","finalScore","type_habitat","type2","habitat","pokeColor","color","formAnswers","possiblePokemonCopy","map","x","shuffle","myArray","i","j","Math","floor","random","possiblePokemonShuffled","console","log","pokemonIndex","currentPokemon","name","pokemonID","id","evolutionsIndex","evolutionsGroups","findIndex","evolution","first","second","third","includes","push","children","className","pokeAttributes","image","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/components/PokemonResults/index.jsx"],"sourcesContent":["import PokeCard from \"../PokeCard\";\r\n\r\n// ---------- Finds the final 6 pokemons and render them ---------- //\r\nfunction PokemonResults (props) {\r\n    \r\n    let chosenPokemon = [];\r\n    const chosenPokemonControl = [];\r\n    let indexFinalScore = 0;\r\n    \r\n    // ----- While the number of pokemon is smaller than 6, do the loop -----\r\n    while (chosenPokemon.length < 6 ) {\r\n\r\n        const possiblePokemon = props.pokemonAttributes.filter(\r\n            attr => attr.type1 === props.finalScore[indexFinalScore].type_habitat || \r\n            attr.type2 === props.finalScore[indexFinalScore].type_habitat || \r\n            attr.habitat === props.finalScore[indexFinalScore].type_habitat)\r\n            .filter(pokeColor => pokeColor.color === props.formAnswers.color ||\r\n            pokeColor.color === 'yellow');\r\n\r\n        // colocar para shuffle cores tbm\r\n\r\n        let possiblePokemonCopy = possiblePokemon.map((x) => x);\r\n           \r\n        const shuffle = (myArray) => { \r\n            for (let i = myArray.length - 1; i > 0; i--) { \r\n                const j = Math.floor(Math.random() * (i + 1)); \r\n                [myArray[i], myArray[j]] = [myArray[j], myArray[i]]; \r\n            } \r\n            return myArray; \r\n        }; \r\n\r\n        const possiblePokemonShuffled = shuffle(possiblePokemonCopy);\r\n        console.log('possiblePokemonShuffled', possiblePokemonShuffled)\r\n\r\n        for (let pokemonIndex in possiblePokemonShuffled) {\r\n            console.log('pokemonIndex', pokemonIndex)\r\n            let currentPokemon = possiblePokemonShuffled[pokemonIndex].name;\r\n            let pokemonID = possiblePokemonShuffled[pokemonIndex].id;\r\n            console.log('currentPokemon', currentPokemon);\r\n            let evolutionsIndex = props.evolutionsGroups.findIndex(evolution => evolution.first === currentPokemon || evolution.second === currentPokemon || evolution.third === currentPokemon );\r\n            console.log('índice da evolução', evolutionsIndex);\r\n  \r\n            if (pokemonID === 144 || pokemonID === 145 || pokemonID === 146 || pokemonID === 149) {\r\n                console.log('Pokemon muito raro!!');\r\n                continue\r\n            }\r\n\r\n            if (evolutionsIndex !== -1) { // colocar alguma forma de condicional para impedir de repetir pokemon\r\n                if (chosenPokemonControl.includes(evolutionsIndex)) {\r\n                    console.log('Já tem uma evolução!')\r\n                    continue\r\n                }\r\n            } else {\r\n                if (chosenPokemonControl.includes(currentPokemon)) {\r\n                    console.log('Já tem esse Pokémon!')\r\n                    continue\r\n                }\r\n            }\r\n\r\n           \r\n            \r\n            chosenPokemon = [...chosenPokemon, possiblePokemonShuffled[pokemonIndex]]\r\n            console.log('chosenPokemon', chosenPokemon);\r\n            // chosenPokemonControl.push(possiblePokemonShuffled[pokemonIndex].name);\r\n            chosenPokemonControl.push(evolutionsIndex);\r\n            console.log('chosenPokemonControl', chosenPokemonControl);\r\n            console.log('indexFinalScore', indexFinalScore);\r\n            console.log(chosenPokemon.length);\r\n            \r\n            if (chosenPokemon.length === 6) {\r\n                break\r\n            }\r\n            \r\n        }\r\n        indexFinalScore++\r\n    }\r\n    console.log('SAIU DO WHILE!!!!!!!')\r\n\r\n\r\n\treturn (\r\n\t\t<section>\r\n                <div className=\"card-container\">\r\n                {chosenPokemon.map(pokeAttributes => {\r\n                return <PokeCard key={pokeAttributes.name} name={pokeAttributes.name} image={pokeAttributes.image}/>\r\n                })}\r\n                </div>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default PokemonResults;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}