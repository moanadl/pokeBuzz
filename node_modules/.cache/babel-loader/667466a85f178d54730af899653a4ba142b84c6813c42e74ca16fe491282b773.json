{"ast":null,"code":"import questionOptions from '../data/questionOptions.json';\nexport const findPokemon = props => {\n  let chosenPokemon = [];\n  const chosenPokemonEvolutionsIndex = [];\n  let scoreIndex = 0;\n  const colors = questionOptions.colorOptions.map(color => color.toLowerCase());\n  const primaryColor = props.formAnswers.color.toLowerCase();\n  const getRandomAltColor = () => {\n    const altColorOptions = colors.filter(color => color !== primaryColor);\n    let rdmIndex = Math.floor(Math.random() * altColorOptions.length);\n    return altColorOptions[rdmIndex];\n  };\n\n  // ----- While the number of pokemon is smaller than 6, do the loop -----\n  while (chosenPokemon.length < 6) {\n    let altColor = getRandomAltColor();\n    // console.log(altColor)\n\n    const candidates = props.pokemonAttributes.filter(attr => (attr.type1 === props.finalScore[scoreIndex].type || attr.type2 === props.finalScore[scoreIndex].type || attr.habitat === props.finalScore[scoreIndex].type) && (attr.color === primaryColor || attr.color === altColor));\n    console.log('candidates', candidates);\n\n    // let candidatesCopy = candidates.map((x) => x);\n\n    const shuffle = myArray => {\n      const array = [...myArray];\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n      ;\n      return array;\n    };\n    const shuffledCandidates = shuffle(candidates);\n    // console.log('shuffledCandidates', shuffledCandidates)\n\n    for (const pokemon of shuffledCandidates) {\n      if (shuffledCandidates.length < 0) return;\n      console.log('pokemon', pokemon);\n      if (pokemon.name) {\n        // const { name } = pokemon;\n        const {\n          id,\n          name\n        } = pokemon;\n      } else {\n        console.log(pokemon);\n      }\n      let currentPokemon = pokemon.name;\n      let pokemonID = pokemon.id;\n      console.log('currentPokemon', currentPokemon);\n      let evolutionsIndex = props.evolutionsGroups.findIndex(evolution => evolution.first === currentPokemon || evolution.second === currentPokemon || evolution.third === currentPokemon);\n      if (pokemonID === 144 || pokemonID === 145 || pokemonID === 146 || pokemonID === 149) {\n        console.log('Pokemon muito raro!!');\n        continue;\n      }\n      if (evolutionsIndex !== -1) {\n        if (chosenPokemonEvolutionsIndex.includes(evolutionsIndex)) {\n          // console.log('Já tem uma evolução!')\n          continue;\n        }\n      } else {\n        if (chosenPokemonEvolutionsIndex.includes(currentPokemon)) {\n          // console.log('Já tem esse Pokémon!')\n          continue;\n        }\n      }\n      chosenPokemon = [...chosenPokemon, shuffledCandidates[pokemon]];\n      chosenPokemonEvolutionsIndex.push(evolutionsIndex);\n      // console.log(chosenPokemon)\n\n      if (chosenPokemon.length === 6) {\n        break;\n      }\n    }\n    scoreIndex++;\n  }\n  // console.log('SAIU DO WHILE!!!!!!!')\n\n  return chosenPokemon;\n};","map":{"version":3,"names":["questionOptions","findPokemon","props","chosenPokemon","chosenPokemonEvolutionsIndex","scoreIndex","colors","colorOptions","map","color","toLowerCase","primaryColor","formAnswers","getRandomAltColor","altColorOptions","filter","rdmIndex","Math","floor","random","length","altColor","candidates","pokemonAttributes","attr","type1","finalScore","type","type2","habitat","console","log","shuffle","myArray","array","i","j","shuffledCandidates","pokemon","name","id","currentPokemon","pokemonID","evolutionsIndex","evolutionsGroups","findIndex","evolution","first","second","third","includes","push"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/utils/findPokemon.js"],"sourcesContent":["import questionOptions from '../data/questionOptions.json';\r\n\r\nexport const findPokemon = (props) => {\r\n \r\n    let chosenPokemon = [];\r\n    const chosenPokemonEvolutionsIndex = [];\r\n    let scoreIndex = 0;\r\n    const colors = questionOptions.colorOptions.map(color => color.toLowerCase());\r\n    const primaryColor = props.formAnswers.color.toLowerCase();\r\n\r\n    const getRandomAltColor = () => {\r\n        const altColorOptions = colors.filter(color => color !== primaryColor);\r\n        let rdmIndex = Math.floor(Math.random() * altColorOptions.length);\r\n        return altColorOptions[rdmIndex];\r\n    }\r\n    \r\n    // ----- While the number of pokemon is smaller than 6, do the loop -----\r\n    while (chosenPokemon.length < 6 ) {\r\n\r\n        let altColor = getRandomAltColor();\r\n        // console.log(altColor)\r\n\r\n        const candidates = props.pokemonAttributes.filter(attr => \r\n            (attr.type1 === props.finalScore[scoreIndex].type || \r\n            attr.type2 === props.finalScore[scoreIndex].type || \r\n            attr.habitat === props.finalScore[scoreIndex].type) && \r\n            (attr.color === primaryColor || attr.color === altColor))\r\n\r\n\r\n            \r\n    console.log('candidates', candidates)  \r\n\r\n        // let candidatesCopy = candidates.map((x) => x);\r\n           \r\n        const shuffle = (myArray) => { \r\n            const array = [...myArray];\r\n\r\n            for (let i = array.length - 1; i > 0; i--) { \r\n                const j = Math.floor(Math.random() * (i + 1)); \r\n                [array[i], array[j]] = [array[j], array[i]]; \r\n            };\r\n\r\n            return array; \r\n        }; \r\n\r\n        const shuffledCandidates = shuffle(candidates);\r\n        // console.log('shuffledCandidates', shuffledCandidates)\r\n\r\n        for (const pokemon of shuffledCandidates) {\r\n            if (shuffledCandidates.length < 0) return\r\n            console.log('pokemon', pokemon);\r\n            if (pokemon.name) {\r\n                // const { name } = pokemon;\r\n                const { id, name } = pokemon;\r\n            } else {\r\n                console.log(pokemon);\r\n            }\r\n            let currentPokemon = pokemon.name\r\n            let pokemonID = pokemon.id;\r\n            console.log('currentPokemon', currentPokemon);\r\n            let evolutionsIndex = props.evolutionsGroups.findIndex(evolution => evolution.first === currentPokemon || evolution.second === currentPokemon || evolution.third === currentPokemon );\r\n  \r\n            if (pokemonID === 144 || pokemonID === 145 || pokemonID === 146 || pokemonID === 149) {\r\n                console.log('Pokemon muito raro!!');\r\n                continue\r\n            }\r\n\r\n            if (evolutionsIndex !== -1) { \r\n                if (chosenPokemonEvolutionsIndex.includes(evolutionsIndex)) {\r\n                    // console.log('Já tem uma evolução!')\r\n                    continue\r\n                }\r\n            } else {\r\n                if (chosenPokemonEvolutionsIndex.includes(currentPokemon)) {\r\n                    // console.log('Já tem esse Pokémon!')\r\n                    continue\r\n                }\r\n            }\r\n\r\n            chosenPokemon = [...chosenPokemon, shuffledCandidates[pokemon]]\r\n            chosenPokemonEvolutionsIndex.push(evolutionsIndex);\r\n            // console.log(chosenPokemon)\r\n            \r\n            if (chosenPokemon.length === 6) {\r\n                break\r\n            }\r\n\r\n        }\r\n        scoreIndex++\r\n    }\r\n    // console.log('SAIU DO WHILE!!!!!!!')\r\n\r\n\r\n\treturn chosenPokemon;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}