{"ast":null,"code":"import questionOptions from '../data/questionOptions.json';\nexport const findPokemon = props => {\n  const {\n    finalScore,\n    formAnswers,\n    pokemonAttributes,\n    evolutionsGroups\n  } = props;\n  let chosenPokemon = [];\n  const chosenPokemonEvolutionsIndex = [];\n  const forbiddenIDs = new Set([144, 145, 146, 149]); // Articuno, Zapdos, Moltres, Dragonite\n  let scoreIndex = 0;\n  const colors = questionOptions.colorOptions.map(color => color.toLowerCase());\n  const primaryColor = formAnswers.color.toLowerCase();\n  const getRandomAltColor = () => {\n    const altColorOptions = colors.filter(color => color !== primaryColor);\n    let rdmIndex = Math.floor(Math.random() * altColorOptions.length);\n    return altColorOptions[rdmIndex];\n  };\n\n  // ----- While the number of pokemon is smaller than 6, do the loop -----\n  while (chosenPokemon.length < 6) {\n    let altColor = getRandomAltColor();\n    const candidates = pokemonAttributes.filter(attr => (attr.type1 === finalScore[scoreIndex].type || attr.type2 === finalScore[scoreIndex].type || attr.habitat === finalScore[scoreIndex].type) && (attr.color === primaryColor || attr.color === altColor));\n    const shuffle = myArray => {\n      console.log('myArray', myArray);\n      const array = [...myArray];\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n      ;\n      console.log('array', array);\n      return array;\n    };\n    const shuffledCandidates = shuffle(candidates);\n    for (const pokemon of shuffledCandidates) {\n      // Não executa caso array venha vazio\n      //console.log('pokemon', pokemon);\n      const {\n        id,\n        name\n      } = pokemon;\n      if (forbiddenIDs.has(id)) {\n        console.log('Pokemon muito raro!!');\n        continue;\n      }\n      ;\n      let currentPokemon = name;\n      let pokemonID = id;\n      console.log('currentPokemon', currentPokemon);\n      let evolutionsIndex = evolutionsGroups.findIndex(evolution => evolution.first === currentPokemon || evolution.second === currentPokemon || evolution.third === currentPokemon);\n      if (pokemonID === 144 || pokemonID === 145 || pokemonID === 146 || pokemonID === 149) {\n        console.log('Pokemon muito raro!!');\n        continue;\n      }\n      if (evolutionsIndex !== -1) {\n        if (chosenPokemonEvolutionsIndex.includes(evolutionsIndex)) {\n          continue;\n        }\n      } else {\n        if (chosenPokemonEvolutionsIndex.includes(currentPokemon)) {\n          continue;\n        }\n      }\n      chosenPokemon = [...chosenPokemon, pokemon];\n      chosenPokemonEvolutionsIndex.push(evolutionsIndex);\n      if (chosenPokemon.length === 6) {\n        break;\n      }\n    }\n    scoreIndex++;\n  }\n  return chosenPokemon;\n};","map":{"version":3,"names":["questionOptions","findPokemon","props","finalScore","formAnswers","pokemonAttributes","evolutionsGroups","chosenPokemon","chosenPokemonEvolutionsIndex","forbiddenIDs","Set","scoreIndex","colors","colorOptions","map","color","toLowerCase","primaryColor","getRandomAltColor","altColorOptions","filter","rdmIndex","Math","floor","random","length","altColor","candidates","attr","type1","type","type2","habitat","shuffle","myArray","console","log","array","i","j","shuffledCandidates","pokemon","id","name","has","currentPokemon","pokemonID","evolutionsIndex","findIndex","evolution","first","second","third","includes","push"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/utils/findPokemon.js"],"sourcesContent":["import questionOptions from '../data/questionOptions.json';\r\n\r\nexport const findPokemon = (props) => {\r\n\r\n    const { finalScore, formAnswers, pokemonAttributes, evolutionsGroups } = props;\r\n \r\n    let chosenPokemon = [];\r\n    const chosenPokemonEvolutionsIndex = [];\r\n    const forbiddenIDs = new Set([144, 145, 146, 149]); // Articuno, Zapdos, Moltres, Dragonite\r\n    let scoreIndex = 0;\r\n    const colors = questionOptions.colorOptions.map(color => color.toLowerCase());\r\n    const primaryColor = formAnswers.color.toLowerCase();\r\n\r\n    const getRandomAltColor = () => {\r\n        const altColorOptions = colors.filter(color => color !== primaryColor);\r\n        let rdmIndex = Math.floor(Math.random() * altColorOptions.length);\r\n        return altColorOptions[rdmIndex];\r\n    }\r\n    \r\n    // ----- While the number of pokemon is smaller than 6, do the loop -----\r\n    while (chosenPokemon.length < 6 ) {\r\n\r\n        let altColor = getRandomAltColor();\r\n\r\n        const candidates = pokemonAttributes.filter(attr => \r\n            (attr.type1 === finalScore[scoreIndex].type || \r\n            attr.type2 === finalScore[scoreIndex].type || \r\n            attr.habitat === finalScore[scoreIndex].type) && \r\n            (attr.color === primaryColor || attr.color === altColor))\r\n           \r\n        const shuffle = (myArray) => { \r\n            console.log('myArray', myArray);\r\n            const array = [...myArray];\r\n\r\n            for (let i = array.length - 1; i > 0; i--) { \r\n                const j = Math.floor(Math.random() * (i + 1)); \r\n                [array[i], array[j]] = [array[j], array[i]]; \r\n            };\r\n\r\n            console.log('array', array);\r\n            return array; \r\n        }; \r\n\r\n        const shuffledCandidates = shuffle(candidates);\r\n\r\n        for (const pokemon of shuffledCandidates) { // Não executa caso array venha vazio\r\n            //console.log('pokemon', pokemon);\r\n            const { id, name } = pokemon;\r\n\r\n            if (forbiddenIDs.has(id)) {\r\n                console.log('Pokemon muito raro!!');\r\n                continue\r\n            };\r\n\r\n\r\n            let currentPokemon = name\r\n            let pokemonID = id;\r\n            console.log('currentPokemon', currentPokemon);\r\n            let evolutionsIndex = evolutionsGroups.findIndex(evolution => evolution.first === currentPokemon || evolution.second === currentPokemon || evolution.third === currentPokemon );\r\n  \r\n            if (pokemonID === 144 || pokemonID === 145 || pokemonID === 146 || pokemonID === 149) {\r\n                console.log('Pokemon muito raro!!');\r\n                continue\r\n            }\r\n\r\n            if (evolutionsIndex !== -1) { \r\n                if (chosenPokemonEvolutionsIndex.includes(evolutionsIndex)) {\r\n                    continue\r\n                }\r\n            } else {\r\n                if (chosenPokemonEvolutionsIndex.includes(currentPokemon)) {\r\n                    continue\r\n                }\r\n            }\r\n\r\n            chosenPokemon = [...chosenPokemon, pokemon]\r\n            chosenPokemonEvolutionsIndex.push(evolutionsIndex);\r\n            \r\n            if (chosenPokemon.length === 6) {\r\n                break\r\n            }\r\n\r\n        }\r\n        scoreIndex++\r\n    }\r\n\r\n\treturn chosenPokemon;\r\n}\r\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,8BAA8B;AAE1D,OAAO,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAElC,MAAM;IAAEC,UAAU;IAAEC,WAAW;IAAEC,iBAAiB;IAAEC;EAAiB,CAAC,GAAGJ,KAAK;EAE9E,IAAIK,aAAa,GAAG,EAAE;EACtB,MAAMC,4BAA4B,GAAG,EAAE;EACvC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;EACpD,IAAIC,UAAU,GAAG,CAAC;EAClB,MAAMC,MAAM,GAAGZ,eAAe,CAACa,YAAY,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,WAAW,CAAC,CAAC,CAAC;EAC7E,MAAMC,YAAY,GAAGb,WAAW,CAACW,KAAK,CAACC,WAAW,CAAC,CAAC;EAEpD,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,MAAMC,eAAe,GAAGP,MAAM,CAACQ,MAAM,CAACL,KAAK,IAAIA,KAAK,KAAKE,YAAY,CAAC;IACtE,IAAII,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,eAAe,CAACM,MAAM,CAAC;IACjE,OAAON,eAAe,CAACE,QAAQ,CAAC;EACpC,CAAC;;EAED;EACA,OAAOd,aAAa,CAACkB,MAAM,GAAG,CAAC,EAAG;IAE9B,IAAIC,QAAQ,GAAGR,iBAAiB,CAAC,CAAC;IAElC,MAAMS,UAAU,GAAGtB,iBAAiB,CAACe,MAAM,CAACQ,IAAI,IAC5C,CAACA,IAAI,CAACC,KAAK,KAAK1B,UAAU,CAACQ,UAAU,CAAC,CAACmB,IAAI,IAC3CF,IAAI,CAACG,KAAK,KAAK5B,UAAU,CAACQ,UAAU,CAAC,CAACmB,IAAI,IAC1CF,IAAI,CAACI,OAAO,KAAK7B,UAAU,CAACQ,UAAU,CAAC,CAACmB,IAAI,MAC3CF,IAAI,CAACb,KAAK,KAAKE,YAAY,IAAIW,IAAI,CAACb,KAAK,KAAKW,QAAQ,CAAC,CAAC;IAE7D,MAAMO,OAAO,GAAIC,OAAO,IAAK;MACzBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,OAAO,CAAC;MAC/B,MAAMG,KAAK,GAAG,CAAC,GAAGH,OAAO,CAAC;MAE1B,KAAK,IAAII,CAAC,GAAGD,KAAK,CAACZ,MAAM,GAAG,CAAC,EAAEa,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QACvC,MAAMC,CAAC,GAAGjB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIc,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,EAAED,KAAK,CAACE,CAAC,CAAC,CAAC,GAAG,CAACF,KAAK,CAACE,CAAC,CAAC,EAAEF,KAAK,CAACC,CAAC,CAAC,CAAC;MAC/C;MAAC;MAEDH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEC,KAAK,CAAC;MAC3B,OAAOA,KAAK;IAChB,CAAC;IAED,MAAMG,kBAAkB,GAAGP,OAAO,CAACN,UAAU,CAAC;IAE9C,KAAK,MAAMc,OAAO,IAAID,kBAAkB,EAAE;MAAE;MACxC;MACA,MAAM;QAAEE,EAAE;QAAEC;MAAK,CAAC,GAAGF,OAAO;MAE5B,IAAIhC,YAAY,CAACmC,GAAG,CAACF,EAAE,CAAC,EAAE;QACtBP,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;QACnC;MACJ;MAAC;MAGD,IAAIS,cAAc,GAAGF,IAAI;MACzB,IAAIG,SAAS,GAAGJ,EAAE;MAClBP,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAES,cAAc,CAAC;MAC7C,IAAIE,eAAe,GAAGzC,gBAAgB,CAAC0C,SAAS,CAACC,SAAS,IAAIA,SAAS,CAACC,KAAK,KAAKL,cAAc,IAAII,SAAS,CAACE,MAAM,KAAKN,cAAc,IAAII,SAAS,CAACG,KAAK,KAAKP,cAAe,CAAC;MAE/K,IAAIC,SAAS,KAAK,GAAG,IAAIA,SAAS,KAAK,GAAG,IAAIA,SAAS,KAAK,GAAG,IAAIA,SAAS,KAAK,GAAG,EAAE;QAClFX,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;QACnC;MACJ;MAEA,IAAIW,eAAe,KAAK,CAAC,CAAC,EAAE;QACxB,IAAIvC,4BAA4B,CAAC6C,QAAQ,CAACN,eAAe,CAAC,EAAE;UACxD;QACJ;MACJ,CAAC,MAAM;QACH,IAAIvC,4BAA4B,CAAC6C,QAAQ,CAACR,cAAc,CAAC,EAAE;UACvD;QACJ;MACJ;MAEAtC,aAAa,GAAG,CAAC,GAAGA,aAAa,EAAEkC,OAAO,CAAC;MAC3CjC,4BAA4B,CAAC8C,IAAI,CAACP,eAAe,CAAC;MAElD,IAAIxC,aAAa,CAACkB,MAAM,KAAK,CAAC,EAAE;QAC5B;MACJ;IAEJ;IACAd,UAAU,EAAE;EAChB;EAEH,OAAOJ,aAAa;AACrB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}