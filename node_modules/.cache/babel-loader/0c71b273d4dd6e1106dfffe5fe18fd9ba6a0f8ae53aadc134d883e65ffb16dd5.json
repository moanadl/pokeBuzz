{"ast":null,"code":"import _objectSpread from\"C:/Moana_SSD/WebDev/Projetos/pokebuzz/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState}from\"react\";import{getResults}from\"../../utils/results\";import Question from\"../Question\";import questions from'../../data/questionsData.json';import'./Form.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Form(props){const[formErrors,setFormErrors]=useState([]);const[formAnswers,setFormAnswers]=useState(()=>{Object.fromEntries(questions.map(key=>[key,'']));});const getFormAnswers=partialAnswer=>{setFormAnswers(prev=>_objectSpread(_objectSpread({},prev),partialAnswer));};// ----- On form submission -----\nconst sendFormAnswers=e=>{e.preventDefault();const formData=new FormData(e.target);const missingFields=[];questions.forEach(question=>{if(!formData.get(question.key)){missingFields.push(question.label);}});if(missingFields.length>0){setFormErrors(missingFields);return;}setFormErrors([]);// ----- Calculates the results of the quiz for type/habitat -----\nconst finalScore=getResults(formAnswers);// ----- Calculates the result for type/habitat and the form answers -----\nprops.getFormResults(finalScore,formAnswers);};return/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:sendFormAnswers,children:[questions.map((question,index)=>/*#__PURE__*/_jsx(Question,{label:\"\".concat(question.label,\":\"),optionKey:question.key,hasError:formErrors.includes(question.label),getFormAnswers:getFormAnswers,index:index,testid:question.key},question.key)),formErrors.length>0&&/*#__PURE__*/_jsxs(\"div\",{\"data-testid\":\"form-errors\",className:\"form-errors\",role:\"alert\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"You need to select one option from the following questions:\"}),/*#__PURE__*/_jsx(\"ul\",{children:formErrors.map((field,index)=>/*#__PURE__*/_jsx(\"li\",{children:field},index))}),/*#__PURE__*/_jsx(\"p\",{children:\"Follow the sleepy Snorlax!\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"form-button\",children:\"Catch 'em!\"})]})});}export default Form;","map":{"version":3,"names":["useState","getResults","Question","questions","jsx","_jsx","jsxs","_jsxs","Form","props","formErrors","setFormErrors","formAnswers","setFormAnswers","Object","fromEntries","map","key","getFormAnswers","partialAnswer","prev","_objectSpread","sendFormAnswers","e","preventDefault","formData","FormData","target","missingFields","forEach","question","get","push","label","length","finalScore","getFormResults","children","onSubmit","index","concat","optionKey","hasError","includes","testid","className","role","field"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/components/Form/index.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { getResults } from \"../../utils/results\";\r\nimport Question from \"../Question\";\r\nimport questions from '../../data/questionsData.json';\r\nimport './Form.css'\r\n\r\nfunction Form (props) {\r\n\r\n\tconst [formErrors, setFormErrors] = useState([]);\r\n\r\n\tconst [formAnswers, setFormAnswers] = useState(() => {\r\n\t\tObject.fromEntries(questions.map(key => [key, '']));\r\n\t});\r\n\r\n\tconst getFormAnswers = (partialAnswer) => {\r\n        setFormAnswers((prev) => ({\r\n            ...prev,\r\n\t\t\t...partialAnswer\r\n        }));\r\n\t};\r\n\r\n\t// ----- On form submission -----\r\n\tconst sendFormAnswers = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst formData = new FormData(e.target);\r\n\r\n\t\tconst missingFields = [];\r\n\r\n\t\tquestions.forEach(question => {\r\n\t\t\tif (!formData.get(question.key)) {\r\n\t\t\tmissingFields.push(question.label);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (missingFields.length > 0) {\r\n\t\t\tsetFormErrors(missingFields);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetFormErrors([]);\r\n\r\n\t\t// ----- Calculates the results of the quiz for type/habitat -----\r\n\t\tconst finalScore = getResults(formAnswers);\r\n\t\t// ----- Calculates the result for type/habitat and the form answers -----\r\n\t\tprops.getFormResults(finalScore, formAnswers);\r\n\r\n\t}\r\n    \r\n\treturn (\r\n\t\t<section>\r\n\r\n\t\t\t<form onSubmit={sendFormAnswers}>\r\n\t\t\t\t{questions.map((question, index) => \r\n\t\t\t\t\t<Question \r\n\t\t\t\t\t\tkey={question.key} \r\n\t\t\t\t\t\tlabel={`${question.label}:`} \r\n\t\t\t\t\t\toptionKey={question.key}\r\n\t\t\t\t\t\thasError={formErrors.includes(question.label)}\r\n\t\t\t\t\t\tgetFormAnswers={getFormAnswers}\r\n\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\ttestid={question.key} /> \r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{formErrors.length > 0 && (\r\n\t\t\t\t\t<div data-testid='form-errors' className=\"form-errors\" role='alert'>\r\n\t\t\t\t\t\t<p>You need to select one option from the following questions:</p>\r\n\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{formErrors.map((field, index) => (\r\n\t\t\t\t\t\t\t\t<li key={index}>{field}</li>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t\t<p>Follow the sleepy Snorlax!</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t<button className=\"form-button\">Catch 'em!</button>\r\n\t\t\t</form>\r\n\t\t\t\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}