{"ast":null,"code":"var _jsxFileName = \"C:\\\\Moana_SSD\\\\WebDev\\\\Projetos\\\\pokebuzz\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport PokeCard from \"../components/PokeCard\";\nimport './Home.css';\nimport { GetAPIData } from \"../services\";\nimport Form from \"../components/Form\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [pokemonEndpoints, setPokemonEndpoints] = useState([]);\n  const [speciesEndpoints, setSpeciesEndpoints] = useState([]);\n  const [evolutionsEndpoints, setEvolutionEndpoints] = useState([]);\n  const [natureEndpoints, setNatureEndpoints] = useState([]);\n  const [attributes, setAttributes] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const dataAPI = await GetAPIData();\n      setPokemonEndpoints(dataAPI.dataPokemon[0]);\n      setSpeciesEndpoints(dataAPI.dataSpecies[0]);\n      // const pokeEvolutions = dataAPI.dataEvolution[0].map(groups => {\n      //     return (\n      //         {\n      //             first: groups.data.chain.species.name ? groups.data.chain.species.name : null,\n      //             second: groups.data.chain.evolves_to[0].species.name ? groups.data.chain.evolves_to[0].species.name : null,\n      //             third: groups.data.chain.evolves_to[0].evolves_to[0] ? groups.data.chain.evolves_to[0].evolves_to[0].species.name : null\n      //         }\n      //     )\n      // })\n      // setEvolutionGroups(pokeEvolutions);\n      setEvolutionEndpoints(dataAPI.dataEvolution[0]);\n      setNatureEndpoints(dataAPI.dataNature[0]);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (pokemonEndpoints.length > 0 && speciesEndpoints.length > 0 && evolutionsEndpoints.length > 0 && natureEndpoints.length > 0) {\n      getAttributes();\n    }\n  }, [pokemonEndpoints, speciesEndpoints, evolutionsEndpoints, natureEndpoints]);\n  const getAttributes = () => {\n    const pokemonAttributes = pokemonEndpoints.map((endpoint, index) => {\n      const pokemonData = endpoint.data;\n      return {\n        id: pokemonData.id,\n        name: pokemonData.name,\n        height: pokemonData.height,\n        weight: pokemonData.weight,\n        type1: pokemonData.types[0].type.name,\n        type2: pokemonData.types.lenght > 1 ? pokemonData.types[1].type.name : null,\n        image: pokemonData.sprites.other.dream_world.front_default\n      };\n    });\n    const speciesAttributes = speciesEndpoints.map(endpoint => {\n      const speciesData = endpoint.data;\n      return {\n        color: speciesData.color.name,\n        habitat: speciesData.habitat.name\n      };\n    });\n    const natureAttributes = natureEndpoints.map(endpoint => {\n      const natureData = endpoint.data;\n      return {\n        nature: natureData.name\n      };\n    });\n    const attr = pokemonAttributes.map((pokemonAttr, index) => {\n      const speciesAttr = speciesAttributes[index] || {};\n      const natureAttr = natureAttributes[index] || {};\n      return {\n        ...pokemonAttr,\n        ...speciesAttr,\n        ...natureAttr\n      };\n    });\n    setAttributes(attr);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"rpC+Ch6dTUiMyVHoxIMqblzYOko=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","PokeCard","GetAPIData","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","pokemonEndpoints","setPokemonEndpoints","speciesEndpoints","setSpeciesEndpoints","evolutionsEndpoints","setEvolutionEndpoints","natureEndpoints","setNatureEndpoints","attributes","setAttributes","fetchData","dataAPI","dataPokemon","dataSpecies","dataEvolution","dataNature","length","getAttributes","pokemonAttributes","map","endpoint","index","pokemonData","data","id","name","height","weight","type1","types","type","type2","lenght","image","sprites","other","dream_world","front_default","speciesAttributes","speciesData","color","habitat","natureAttributes","natureData","nature","attr","pokemonAttr","speciesAttr","natureAttr","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/pages/Home.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport PokeCard from \"../components/PokeCard\";\r\nimport './Home.css'\r\nimport { GetAPIData } from \"../services\";\r\nimport Form from \"../components/Form\";\r\n\r\nfunction Home () {    \r\n    \r\n    const [pokemonEndpoints, setPokemonEndpoints] = useState([]);\r\n    const [speciesEndpoints,setSpeciesEndpoints] = useState([]);\r\n    const [evolutionsEndpoints, setEvolutionEndpoints] = useState([]);\r\n    const [natureEndpoints, setNatureEndpoints] = useState([]);\r\n    const [attributes, setAttributes] = useState([]);\r\n    \r\n    useEffect(() => {\r\n            const fetchData = async () => {\r\n            const dataAPI = await GetAPIData();\r\n            setPokemonEndpoints(dataAPI.dataPokemon[0]);\r\n            setSpeciesEndpoints(dataAPI.dataSpecies[0]);\r\n            // const pokeEvolutions = dataAPI.dataEvolution[0].map(groups => {\r\n            //     return (\r\n            //         {\r\n            //             first: groups.data.chain.species.name ? groups.data.chain.species.name : null,\r\n            //             second: groups.data.chain.evolves_to[0].species.name ? groups.data.chain.evolves_to[0].species.name : null,\r\n            //             third: groups.data.chain.evolves_to[0].evolves_to[0] ? groups.data.chain.evolves_to[0].evolves_to[0].species.name : null\r\n            //         }\r\n            //     )\r\n            // })\r\n            // setEvolutionGroups(pokeEvolutions);\r\n            setEvolutionEndpoints(dataAPI.dataEvolution[0])\r\n            setNatureEndpoints(dataAPI.dataNature[0]);\r\n        };\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (pokemonEndpoints.length > 0 \r\n            && speciesEndpoints.length > 0 \r\n            && evolutionsEndpoints.length > 0 \r\n            && natureEndpoints.length > 0 ) {\r\n                getAttributes();\r\n        }\r\n    }, [pokemonEndpoints, speciesEndpoints, evolutionsEndpoints, natureEndpoints]);\r\n\r\n    const getAttributes = () => {\r\n\r\n        const pokemonAttributes = pokemonEndpoints.map((endpoint, index) => {\r\n            const pokemonData = endpoint.data;\r\n            return {\r\n                id: pokemonData.id,\r\n                name: pokemonData.name,\r\n                height: pokemonData.height,\r\n                weight: pokemonData.weight,\r\n                type1: pokemonData.types[0].type.name,\r\n                type2: pokemonData.types.lenght > 1 ? pokemonData.types[1].type.name : null,\r\n                image: pokemonData.sprites.other.dream_world.front_default,\r\n            }\r\n        })\r\n\r\n        const speciesAttributes = speciesEndpoints.map(endpoint => {\r\n            const speciesData = endpoint.data;\r\n            return {\r\n                color: speciesData.color.name,\r\n                habitat: speciesData.habitat.name\r\n            }\r\n        })\r\n\r\n        const natureAttributes = natureEndpoints.map(endpoint => {\r\n            const natureData = endpoint.data;\r\n            return {\r\n                nature: natureData.name\r\n            }\r\n        })\r\n\r\n        const attr = pokemonAttributes.map((pokemonAttr, index) => {\r\n            const speciesAttr = speciesAttributes[index] || {};\r\n            const natureAttr = natureAttributes[index] || {};\r\n            return {\r\n                ...pokemonAttr,\r\n                ...speciesAttr,\r\n                ...natureAttr,\r\n            }\r\n        })\r\n\r\n        setAttributes(attr);\r\n\r\n    }\r\n\r\n\treturn (\r\n        <>\r\n        {/* <div className=\"card-container\">\r\n            {attributes.map(pokeAttributes => {\r\n                return <PokeCard key={pokeAttributes.name} name={pokeAttributes.name} image={pokeAttributes.image}/>\r\n            })}\r\n        </div> */}\r\n        <Form />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}