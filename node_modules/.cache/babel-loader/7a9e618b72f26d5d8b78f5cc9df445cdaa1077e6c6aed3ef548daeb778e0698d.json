{"ast":null,"code":"var _jsxFileName = \"C:\\\\Moana_SSD\\\\WebDev\\\\Projetos\\\\pokebuzz\\\\src\\\\components\\\\PokemonResults\\\\index.jsx\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokemonResults(props) {\n  // console.log('results:', props.pokemonResults);\n  // console.log('results:', props.answersResults);\n  // console.log('resultsFirstItem:', props.answersResults[0].type_habitat)\n  // console.log('pokemonAttributes:', props.attributes)\n  // console.log(props.evolutions)\n\n  const filteredType_Habitat = props.attributes.filter(attr => attr.type1 === props.pokemonResults[0].type_habitat || attr.type1 === props.pokemonResults[0].type_habitat || attr.habitat === props.pokemonResults[0].type_habitat);\n  const filteredColor = filteredType_Habitat.filter(pokeColor => pokeColor.color === props.answersResults.color);\n\n  // const batata = props.evolutions.map(item => item.findIndex(test => test.first === 'horsea'));\n\n  // function teste (blabla) {\n  //     console.log(blabla);\n  //     return blabla.first === 'rhydon' || blabla.second === 'rhydon' || blabla.third === 'rhydon'\n  // }\n  // const batata = props.evolutions.findIndex(teste);\n  // console.log(batata)\n\n  const finalPokemons = [];\n  for (let pokemonName in filteredColor) {\n    let newIndex = props.evolutions.findIndex(group => group.first === filteredColor[pokemonName].name || group.second === filteredColor[pokemonName].name || group.third === filteredColor[pokemonName].name);\n    console.log(newIndex);\n\n    // if (finalPokemons.includes(filteredColor[pokemonName].name)) {\n    //     return\n    // }\n\n    // for (let group in props.evolutions) {\n    //     if (filteredColor[pokemonName].name === )\n\n    //     // console.log(props.evolutions[group]);\n    // }\n    console.log('Nome:', filteredColor[pokemonName].name);\n    console.log('Índice:', newIndex);\n  }\n\n  // console.log('filteredType_Habitat:', filteredType_Habitat);\n  // console.log('filteredColor:', filteredColor)\n  return /*#__PURE__*/_jsxDEV(\"section\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n_c = PokemonResults;\nexport default PokemonResults;\nvar _c;\n$RefreshReg$(_c, \"PokemonResults\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","PokemonResults","props","filteredType_Habitat","attributes","filter","attr","type1","pokemonResults","type_habitat","habitat","filteredColor","pokeColor","color","answersResults","finalPokemons","pokemonName","newIndex","evolutions","findIndex","group","first","name","second","third","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/components/PokemonResults/index.jsx"],"sourcesContent":["import {useState } from \"react\";\r\n\r\nfunction PokemonResults (props) {\r\n\r\n\r\n    // console.log('results:', props.pokemonResults);\r\n    // console.log('results:', props.answersResults);\r\n    // console.log('resultsFirstItem:', props.answersResults[0].type_habitat)\r\n    // console.log('pokemonAttributes:', props.attributes)\r\n    // console.log(props.evolutions)\r\n\r\n    const filteredType_Habitat = props.attributes.filter(attr => attr.type1 === props.pokemonResults[0].type_habitat || attr.type1 === props.pokemonResults[0].type_habitat || attr.habitat === props.pokemonResults[0].type_habitat);\r\n    const filteredColor = filteredType_Habitat.filter(pokeColor => pokeColor.color === props.answersResults.color);\r\n\r\n    // const batata = props.evolutions.map(item => item.findIndex(test => test.first === 'horsea'));\r\n\r\n\r\n    // function teste (blabla) {\r\n    //     console.log(blabla);\r\n    //     return blabla.first === 'rhydon' || blabla.second === 'rhydon' || blabla.third === 'rhydon'\r\n    // }\r\n    // const batata = props.evolutions.findIndex(teste);\r\n    // console.log(batata)\r\n\r\n    const finalPokemons = [];\r\n    for (let pokemonName in filteredColor) {\r\n        let newIndex = props.evolutions.findIndex(group => group.first === filteredColor[pokemonName].name || group.second === filteredColor[pokemonName].name || group.third === filteredColor[pokemonName].name );\r\n        console.log(newIndex)\r\n\r\n        // if (finalPokemons.includes(filteredColor[pokemonName].name)) {\r\n        //     return\r\n        // }\r\n\r\n        // for (let group in props.evolutions) {\r\n        //     if (filteredColor[pokemonName].name === )\r\n\r\n        //     // console.log(props.evolutions[group]);\r\n        // }\r\n        console.log('Nome:' , filteredColor[pokemonName].name);\r\n        console.log('Índice:', newIndex);\r\n    }\r\n        \r\n\r\n\r\n    // console.log('filteredType_Habitat:', filteredType_Habitat);\r\n    // console.log('filteredColor:', filteredColor)\r\n\treturn (\r\n\t\t<section>\r\n\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default PokemonResults;\r\n"],"mappings":";AAAA,SAAQA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,cAAcA,CAAEC,KAAK,EAAE;EAG5B;EACA;EACA;EACA;EACA;;EAEA,MAAMC,oBAAoB,GAAGD,KAAK,CAACE,UAAU,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,KAAKL,KAAK,CAACM,cAAc,CAAC,CAAC,CAAC,CAACC,YAAY,IAAIH,IAAI,CAACC,KAAK,KAAKL,KAAK,CAACM,cAAc,CAAC,CAAC,CAAC,CAACC,YAAY,IAAIH,IAAI,CAACI,OAAO,KAAKR,KAAK,CAACM,cAAc,CAAC,CAAC,CAAC,CAACC,YAAY,CAAC;EACjO,MAAME,aAAa,GAAGR,oBAAoB,CAACE,MAAM,CAACO,SAAS,IAAIA,SAAS,CAACC,KAAK,KAAKX,KAAK,CAACY,cAAc,CAACD,KAAK,CAAC;;EAE9G;;EAGA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAME,aAAa,GAAG,EAAE;EACxB,KAAK,IAAIC,WAAW,IAAIL,aAAa,EAAE;IACnC,IAAIM,QAAQ,GAAGf,KAAK,CAACgB,UAAU,CAACC,SAAS,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,KAAKV,aAAa,CAACK,WAAW,CAAC,CAACM,IAAI,IAAIF,KAAK,CAACG,MAAM,KAAKZ,aAAa,CAACK,WAAW,CAAC,CAACM,IAAI,IAAIF,KAAK,CAACI,KAAK,KAAKb,aAAa,CAACK,WAAW,CAAC,CAACM,IAAK,CAAC;IAC3MG,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;;IAErB;IACA;IACA;;IAEA;IACA;;IAEA;IACA;IACAQ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAGf,aAAa,CAACK,WAAW,CAAC,CAACM,IAAI,CAAC;IACtDG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAET,QAAQ,CAAC;EACpC;;EAIA;EACA;EACH,oBACCjB,OAAA;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAES,CAAC;AAEZ;AAACC,EAAA,GAjDQ9B,cAAc;AAmDvB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}