{"ast":null,"code":"var _jsxFileName = \"C:\\\\Moana_SSD\\\\WebDev\\\\Projetos\\\\pokebuzz\\\\src\\\\components\\\\Form\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { getResults } from \"../../utils/results\";\nimport Question from \"../Question\";\nimport questions from '../../data/questionsData.json';\nimport './Form.css';\nimport Logo from \"../Logo/Logo\";\n\n// ---------- Renders the Form ---------- //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form(props) {\n  _s();\n  // ----- Creating the state for the form answers -----\n  const [formAnswers, setFormAnswers] = useState(() => {\n    Object.fromEntries(questions.map(key => [key, '']));\n  });\n\n  // ----- Gets the value of each radio button from the component Question to set the formAnswers -----\n  const getFormAnswers = partialAnswer => {\n    setFormAnswers(prev => ({\n      ...prev,\n      ...partialAnswer\n    }));\n  };\n\n  // ----- On form submission -----\n  const sendFormAnswers = e => {\n    e.preventDefault();\n    // ----- Calls the imported function getResults to calculate the results of the quiz for type/habitat -----\n    const finalScore = getResults(formAnswers);\n    // ----- Calls the prop function getFormResults with the calculated result for type/habitat and the form answers -----\n    props.getFormResults(finalScore, formAnswers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendFormAnswers,\n      children: [questions.map((question, index) => /*#__PURE__*/_jsxDEV(Question, {\n        label: `${question.label}:`,\n        index: index,\n        getFormAnswers: getFormAnswers\n      }, question.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Catch 'em!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n_s(Form, \"O1cS6fd7mRPDKUeGVV8QE0c9WWk=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","getResults","Question","questions","Logo","jsxDEV","_jsxDEV","Form","props","_s","formAnswers","setFormAnswers","Object","fromEntries","map","key","getFormAnswers","partialAnswer","prev","sendFormAnswers","e","preventDefault","finalScore","getFormResults","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","question","index","label","_c","$RefreshReg$"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/components/Form/index.jsx"],"sourcesContent":["import {useState } from \"react\";\r\nimport { getResults } from \"../../utils/results\";\r\nimport Question from \"../Question\";\r\nimport questions from '../../data/questionsData.json';\r\nimport './Form.css'\r\nimport Logo from \"../Logo/Logo\";\r\n\r\n// ---------- Renders the Form ---------- //\r\nfunction Form (props) {\r\n\r\n\t// ----- Creating the state for the form answers -----\r\n\tconst [formAnswers, setFormAnswers] = useState(() => {\r\n\t\tObject.fromEntries(questions.map(key => [key, '']));\r\n\t});\r\n\r\n\t// ----- Gets the value of each radio button from the component Question to set the formAnswers -----\r\n\tconst getFormAnswers = (partialAnswer) => {\r\n        setFormAnswers((prev) => ({\r\n            ...prev,\r\n\t\t\t...partialAnswer\r\n        }));\r\n\t};\r\n\r\n\t// ----- On form submission -----\r\n\tconst sendFormAnswers = (e) => {\r\n\t\te.preventDefault();\r\n\t\t// ----- Calls the imported function getResults to calculate the results of the quiz for type/habitat -----\r\n\t\tconst finalScore = getResults(formAnswers);\r\n\t\t// ----- Calls the prop function getFormResults with the calculated result for type/habitat and the form answers -----\r\n\t\tprops.getFormResults(finalScore, formAnswers);\r\n\t}\r\n    \r\n\treturn (\r\n\t\t<section>\r\n\t\t\t{/* <h1 className=\"form-title\">\r\n\t\t\t\tFind out your six\r\n                <img src=\"images/logo-pokemon.png\" alt=\"PokÃ©mon logo\" />\r\n            </h1> */}\r\n\t\t\t<Logo />\r\n\r\n\t\t\t<form onSubmit={sendFormAnswers}>\r\n\t\t\t\t{questions.map((question, index) => \r\n\t\t\t\t\t<Question \r\n\t\t\t\t\t\tkey={question.key} \r\n\t\t\t\t\t\tlabel={`${question.label}:`} \r\n\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\tgetFormAnswers={getFormAnswers} /> \r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<button>Catch 'em!</button>\r\n\t\t\t</form>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAQ,OAAO;AAC/B,SAASC,UAAU,QAAQ,qBAAqB;AAChD,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,SAAS,MAAM,+BAA+B;AACrD,OAAO,YAAY;AACnB,OAAOC,IAAI,MAAM,cAAc;;AAE/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,IAAIA,CAAEC,KAAK,EAAE;EAAAC,EAAA;EAErB;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,MAAM;IACpDY,MAAM,CAACC,WAAW,CAACV,SAAS,CAACW,GAAG,CAACC,GAAG,IAAI,CAACA,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;EACpD,CAAC,CAAC;;EAEF;EACA,MAAMC,cAAc,GAAIC,aAAa,IAAK;IACnCN,cAAc,CAAEO,IAAI,KAAM;MACtB,GAAGA,IAAI;MAChB,GAAGD;IACE,CAAC,CAAC,CAAC;EACV,CAAC;;EAED;EACA,MAAME,eAAe,GAAIC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,MAAMC,UAAU,GAAGrB,UAAU,CAACS,WAAW,CAAC;IAC1C;IACAF,KAAK,CAACe,cAAc,CAACD,UAAU,EAAEZ,WAAW,CAAC;EAC9C,CAAC;EAED,oBACCJ,OAAA;IAAAkB,QAAA,gBAKClB,OAAA,CAACF,IAAI;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAERtB,OAAA;MAAMuB,QAAQ,EAAEV,eAAgB;MAAAK,QAAA,GAC9BrB,SAAS,CAACW,GAAG,CAAC,CAACgB,QAAQ,EAAEC,KAAK,kBAC9BzB,OAAA,CAACJ,QAAQ;QAER8B,KAAK,EAAE,GAAGF,QAAQ,CAACE,KAAK,GAAI;QAC5BD,KAAK,EAAEA,KAAM;QACbf,cAAc,EAAEA;MAAe,GAH1Bc,QAAQ,CAACf,GAAG;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGgB,CACnC,CAAC,eAEDtB,OAAA;QAAAkB,QAAA,EAAQ;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEZ;AAACnB,EAAA,CA7CQF,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AA+Cb,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}