{"ast":null,"code":"var _jsxFileName = \"C:\\\\Moana_SSD\\\\WebDev\\\\Projetos\\\\pokebuzz\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport './Home.css';\nimport { GetAPIData } from \"../services/APIData\";\nimport Form from \"../components/Form\";\nimport PokemonResults from \"../components/PokemonResults\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  // ----- Creating the state for the constants that will be used -----\n  const [pokemonData, setPokemonData] = useState([]);\n  const [speciesData, setSpeciesData] = useState([]);\n  const [evolutionsData, setEvolutionsData] = useState([]);\n  const [evolutionsGroups, setEvolutionsGroups] = useState([]);\n  const [pokemonAttributes, setPokemonsAttributes] = useState([]);\n  const [pokemonResults, setPokemonResults] = useState([]);\n  const [answersResults, setAnswersResults] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const APIData = await GetAPIData();\n      setPokemonData(APIData.pokemon[0]);\n      setSpeciesData(APIData.species[0]);\n      setEvolutionsData(APIData.evolutions[0]);\n      const pokeEvolutions = evolutionsData.map(groups => {\n        return {\n          first: groups.data.chain.species.name ? groups.data.chain.species.name : null,\n          second: groups.data.chain.evolves_to.length > 0 ? groups.data.chain.evolves_to[0].species.name : null,\n          third: groups.data.chain.evolves_to.length > 0 && groups.data.chain.evolves_to[0].evolves_to.length > 0 ? groups.data.chain.evolves_to[0].evolves_to[0].species.name : null\n        };\n      });\n      setEvolutionsGroups(pokeEvolutions);\n      console.log(evolutionsGroups);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (pokemonData.length > 0 && speciesData.length > 0 && evolutionsData.length > 0) {\n      getpokemonAttributes();\n    }\n  }, [pokemonData, speciesData, evolutionsData]);\n  const getpokemonAttributes = () => {\n    const pokemonpokemonAttributes = pokemonData.map(endpoint => {\n      const pokemonData = endpoint.data;\n      return {\n        id: pokemonData.id,\n        name: pokemonData.name,\n        height: pokemonData.height,\n        weight: pokemonData.weight,\n        type1: pokemonData.types[0].type.name,\n        type2: pokemonData.types[1] ? pokemonData.types[1].type.name : null,\n        image: pokemonData.sprites.other.dream_world.front_default\n      };\n    });\n    const speciespokemonAttributes = speciesData.map(endpoint => {\n      const speciesData = endpoint.data;\n      return {\n        color: speciesData.color.name,\n        habitat: speciesData.habitat.name\n      };\n    });\n    const attr = pokemonpokemonAttributes.map((pokemonAttr, index) => {\n      const speciesAttr = speciespokemonAttributes[index] || {};\n      return {\n        ...pokemonAttr,\n        ...speciesAttr\n      };\n    });\n    setPokemonsAttributes(attr);\n    // console.log(pokemonAttributes);\n  };\n  const getFormResults = (pokemonsResults, answersResults) => {\n    setPokemonResults(pokemonsResults);\n    setAnswersResults(answersResults);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: pokemonResults.length > 0 ? /*#__PURE__*/_jsxDEV(PokemonResults, {\n      pokemonResults: pokemonResults,\n      pokemonAttributes: pokemonAttributes,\n      evolutions: evolutionsGroups,\n      answersResults: answersResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      getFormResults: getFormResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 191\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"DexJmWqk4QY5/lEYBeZ9GImaHaU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","GetAPIData","Form","PokemonResults","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","pokemonData","setPokemonData","speciesData","setSpeciesData","evolutionsData","setEvolutionsData","evolutionsGroups","setEvolutionsGroups","pokemonAttributes","setPokemonsAttributes","pokemonResults","setPokemonResults","answersResults","setAnswersResults","fetchData","APIData","pokemon","species","evolutions","pokeEvolutions","map","groups","first","data","chain","name","second","evolves_to","length","third","console","log","getpokemonAttributes","pokemonpokemonAttributes","endpoint","id","height","weight","type1","types","type","type2","image","sprites","other","dream_world","front_default","speciespokemonAttributes","color","habitat","attr","pokemonAttr","index","speciesAttr","getFormResults","pokemonsResults","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/pages/Home.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport './Home.css'\r\nimport { GetAPIData } from \"../services/APIData\";\r\nimport Form from \"../components/Form\";\r\nimport PokemonResults from \"../components/PokemonResults\";\r\n\r\nfunction Home () {    \r\n    \r\n    // ----- Creating the state for the constants that will be used -----\r\n    const [pokemonData, setPokemonData] = useState([]);\r\n    const [speciesData, setSpeciesData] = useState([]);\r\n    const [evolutionsData, setEvolutionsData] = useState([]);\r\n    const [evolutionsGroups, setEvolutionsGroups] = useState([]);\r\n    const [pokemonAttributes, setPokemonsAttributes] = useState([]);\r\n    const [pokemonResults, setPokemonResults] = useState([]);\r\n    const [answersResults, setAnswersResults] = useState([]);\r\n    \r\n    useEffect(() => {\r\n            const fetchData = async () => {\r\n                const APIData = await GetAPIData();\r\n\r\n                setPokemonData(APIData.pokemon[0]);\r\n                setSpeciesData(APIData.species[0]);\r\n                setEvolutionsData(APIData.evolutions[0]);\r\n\r\n                const pokeEvolutions = evolutionsData.map(groups => {\r\n                    return (\r\n                        {\r\n                            first: groups.data.chain.species.name ? groups.data.chain.species.name : null,\r\n                            second: groups.data.chain.evolves_to.length > 0 ? groups.data.chain.evolves_to[0].species.name : null,\r\n                            third: groups.data.chain.evolves_to.length > 0 && groups.data.chain.evolves_to[0].evolves_to.length > 0 ? groups.data.chain.evolves_to[0].evolves_to[0].species.name : null\r\n                        }\r\n                    )\r\n                })\r\n                setEvolutionsGroups(pokeEvolutions);\r\n                console.log(evolutionsGroups)\r\n            };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if (pokemonData.length > 0 \r\n            && speciesData.length > 0 \r\n            && evolutionsData.length > 0) {\r\n                getpokemonAttributes();\r\n        }\r\n    }, [pokemonData, speciesData, evolutionsData]);\r\n\r\n    const getpokemonAttributes = () => {\r\n\r\n        const pokemonpokemonAttributes = pokemonData.map((endpoint) => {\r\n            const pokemonData = endpoint.data;\r\n            return {\r\n                id: pokemonData.id,\r\n                name: pokemonData.name,\r\n                height: pokemonData.height,\r\n                weight: pokemonData.weight,\r\n                type1: pokemonData.types[0].type.name,\r\n                type2: pokemonData.types[1] ? pokemonData.types[1].type.name : null,\r\n                image: pokemonData.sprites.other.dream_world.front_default,\r\n            }\r\n        })\r\n\r\n        const speciespokemonAttributes = speciesData.map(endpoint => {\r\n            const speciesData = endpoint.data;\r\n            return {\r\n                color: speciesData.color.name,\r\n                habitat: speciesData.habitat.name\r\n            }\r\n        })\r\n\r\n        const attr = pokemonpokemonAttributes.map((pokemonAttr, index) => {\r\n            const speciesAttr = speciespokemonAttributes[index] || {};\r\n            return {\r\n                ...pokemonAttr,\r\n                ...speciesAttr,\r\n            }\r\n        })\r\n\r\n        setPokemonsAttributes(attr);\r\n        // console.log(pokemonAttributes);\r\n\r\n    }\r\n\r\n    const getFormResults = (pokemonsResults, answersResults) => {\r\n        setPokemonResults(pokemonsResults);\r\n        setAnswersResults(answersResults)\r\n    }\r\n\r\n\treturn (\r\n        <>\r\n        {/* <div className=\"card-container\">\r\n            {pokemonAttributes.map(pokepokemonAttributes => {\r\n                return <PokeCard key={pokepokemonAttributes.name} name={pokepokemonAttributes.name} image={pokepokemonAttributes.image}/>\r\n            })}\r\n        </div> */}\r\n        {pokemonResults.length > 0 ? <PokemonResults pokemonResults={pokemonResults} pokemonAttributes={pokemonAttributes} evolutions={evolutionsGroups} answersResults={answersResults} /> : <Form getFormResults={getFormResults} />}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}