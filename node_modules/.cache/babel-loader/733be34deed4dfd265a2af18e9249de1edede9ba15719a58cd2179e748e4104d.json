{"ast":null,"code":"var _jsxFileName = \"C:\\\\Moana_SSD\\\\WebDev\\\\Projetos\\\\pokebuzz\\\\src\\\\components\\\\Form\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { getResults } from \"../../services/results\";\nimport Question from \"../Question\";\nimport './Form.css';\n\n// ---------- Renders the Form ---------- //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form(props) {\n  _s();\n  const questionsContent = ['Choose a color', 'Choose a transportation', 'Choose a setting', 'Choose a natural phenomenon', 'Choose something to do', 'Choose a place to chill', 'Choose a Taylor Swift album'];\n  const questionsKeys = ['colorChoice', 'transportationChoice', 'settingChoice', 'phenomenonChoice', 'activityChoice', 'chillChoice', 'taylorChoice'];\n  const questions = [{\n    key: 'color',\n    label: 'Choose a color'\n  }, {\n    key: 'transportation',\n    label: 'Choose a transportation'\n  }, {\n    key: 'setting',\n    label: 'Choose a setting'\n  }, {\n    key: 'naturalPhenomenon',\n    label: 'Choose a natural phenomenon'\n  }, {\n    key: 'activity',\n    label: 'Choose something to do'\n  }, {\n    key: 'placeToChill',\n    label: 'Choose a place to chill'\n  }, {\n    key: 'taylorAlbum',\n    label: 'Choose a Taylor Swift album'\n  }];\n\n  // ----- Creating the state for the user's answers -----\n  const [formAnswers, setFormAnswers] = useState(() => {\n    Object.fromEntries(questions.map(key => [key, '']));\n  });\n\n  // ----- Gets the value of each radio button from the component Question to set the formAnswers -----\n  const getFormAnswers = partialAnswer => {\n    setFormAnswers(prev => ({\n      ...prev,\n      ...partialAnswer\n    }));\n  };\n\n  // ----- On form submission -----\n  const sendFormAnswers = e => {\n    e.preventDefault();\n    console.log(formAnswers);\n    // ----- Calls the imported function getResults to calculate the results of the quiz for type/habitat -----\n    const finalScore = getResults(formAnswers);\n    // ----- Calls the prop function getFormResults with the calculated result for type/habitat and the form answers -----\n    props.getFormResults(finalScore, formAnswers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"form-title\",\n      children: [\"Find out your six\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"images/logo-pokemon.png\",\n        alt: \"Pok\\xE9mon logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendFormAnswers,\n      children: [questionsContent.map((questionContent, index) => /*#__PURE__*/_jsxDEV(Question, {\n        label: `${questionContent}:`,\n        index: index,\n        getFormAnswers: getFormAnswers\n      }, questionsKeys[index], false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Catch 'em!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n_s(Form, \"O1cS6fd7mRPDKUeGVV8QE0c9WWk=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","getResults","Question","jsxDEV","_jsxDEV","Form","props","_s","questionsContent","questionsKeys","questions","key","label","formAnswers","setFormAnswers","Object","fromEntries","map","getFormAnswers","partialAnswer","prev","sendFormAnswers","e","preventDefault","console","log","finalScore","getFormResults","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","questionContent","index","_c","$RefreshReg$"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/components/Form/index.jsx"],"sourcesContent":["import {useState } from \"react\";\r\nimport { getResults } from \"../../services/results\";\r\nimport Question from \"../Question\";\r\nimport './Form.css'\r\n\r\n// ---------- Renders the Form ---------- //\r\nfunction Form (props) {\r\n\r\n\tconst questionsContent = ['Choose a color', 'Choose a transportation', 'Choose a setting', 'Choose a natural phenomenon', 'Choose something to do', 'Choose a place to chill', 'Choose a Taylor Swift album'];\r\n\tconst questionsKeys = ['colorChoice', 'transportationChoice', 'settingChoice', 'phenomenonChoice', 'activityChoice', 'chillChoice', 'taylorChoice'];\r\n\r\n\tconst questions = [\r\n\t\t{ key: 'color', label: 'Choose a color'},\r\n\t\t{ key: 'transportation', label: 'Choose a transportation'},\r\n\t\t{ key: 'setting', label: 'Choose a setting'},\r\n\t\t{ key: 'naturalPhenomenon', label: 'Choose a natural phenomenon'},\r\n\t\t{ key: 'activity', label: 'Choose something to do'},\r\n\t\t{ key: 'placeToChill', label: 'Choose a place to chill'},\r\n\t\t{ key: 'taylorAlbum', label: 'Choose a Taylor Swift album'},\r\n\t];\r\n\r\n\t// ----- Creating the state for the user's answers -----\r\n\tconst [formAnswers, setFormAnswers] = useState(() => {\r\n\t\tObject.fromEntries(questions.map(key => [key, '']));\r\n\t});\r\n\r\n\t// ----- Gets the value of each radio button from the component Question to set the formAnswers -----\r\n\tconst getFormAnswers = (partialAnswer) => {\r\n\t\t        \r\n        setFormAnswers((prev) => ({\r\n            ...prev,\r\n\t\t\t...partialAnswer\r\n        }));\r\n\t\t\r\n\t}\r\n\r\n\t// ----- On form submission -----\r\n\tconst sendFormAnswers = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(formAnswers);\r\n\t\t// ----- Calls the imported function getResults to calculate the results of the quiz for type/habitat -----\r\n\t\tconst finalScore = getResults(formAnswers);\r\n\t\t// ----- Calls the prop function getFormResults with the calculated result for type/habitat and the form answers -----\r\n\t\tprops.getFormResults(finalScore, formAnswers);\r\n\t}\r\n    \r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<h1 className=\"form-title\">Find out your six\r\n                <img src=\"images/logo-pokemon.png\" alt=\"PokÃ©mon logo\"/>\r\n            </h1>\r\n\t\t\t<form onSubmit={sendFormAnswers}>\r\n\t\t\t\t{questionsContent.map((questionContent, index) => \r\n\t\t\t\t\t<Question \r\n\t\t\t\t\t\tkey={questionsKeys[index]} \r\n\t\t\t\t\t\tlabel={`${questionContent}:`} \r\n\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\tgetFormAnswers={getFormAnswers}/> \r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<button>Catch 'em!</button>\r\n\t\t\t</form>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}