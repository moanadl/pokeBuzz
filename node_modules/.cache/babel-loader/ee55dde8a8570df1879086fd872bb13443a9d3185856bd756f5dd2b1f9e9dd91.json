{"ast":null,"code":"var _jsxFileName = \"C:\\\\Moana_SSD\\\\WebDev\\\\Projetos\\\\pokebuzz\\\\src\\\\components\\\\PokemonResults\\\\index.jsx\";\nimport PokeCard from \"../PokeCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokemonResults(props) {\n  const finalPokemons = [];\n  let controlVariable = 0;\n  while (finalPokemons.length < 4) {\n    console.log('Entrou!');\n    console.log('controlVariable:', controlVariable);\n    const filteredType_Habitat = props.attributes.filter(attr => attr.type1 === props.pokemonResults[controlVariable].type_habitat || attr.type2 === props.pokemonResults[controlVariable].type_habitat || attr.habitat === props.pokemonResults[controlVariable].type_habitat);\n    const filteredColor = filteredType_Habitat.filter(pokeColor => pokeColor.color === props.answersResults.color);\n    for (let pokemonName in filteredColor) {\n      let currentName = filteredColor[pokemonName].name;\n      let newIndex = props.evolutions.findIndex(group => group.first === currentName || group.second === currentName || group.third === currentName);\n      console.log(newIndex);\n      // colocar numeros aleatórios para dar chance de vir pokemons evoluidos tbm\n\n      if (finalPokemons.includes(props.evolutions[newIndex].first || props.evolutions[newIndex].second || props.evolutions[newIndex].third)) {\n        continue;\n      }\n      finalPokemons.push(filteredColor[pokemonName].name);\n      console.log('Nome:', filteredColor[pokemonName]);\n      console.log('Índice:', newIndex);\n      console.log('Lista final:', finalPokemons);\n    }\n    controlVariable++;\n  }\n\n  // console.log('filteredType_Habitat:', filteredType_Habitat);\n  // console.log('filteredColor:', filteredColor)\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: finalPokemons.map(pokeAttributes => {\n        return /*#__PURE__*/_jsxDEV(PokeCard, {\n          name: pokeAttributes.name,\n          image: pokeAttributes.image\n        }, pokeAttributes.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n}\n_c = PokemonResults;\nexport default PokemonResults;\nvar _c;\n$RefreshReg$(_c, \"PokemonResults\");","map":{"version":3,"names":["PokeCard","jsxDEV","_jsxDEV","PokemonResults","props","finalPokemons","controlVariable","length","console","log","filteredType_Habitat","attributes","filter","attr","type1","pokemonResults","type_habitat","type2","habitat","filteredColor","pokeColor","color","answersResults","pokemonName","currentName","name","newIndex","evolutions","findIndex","group","first","second","third","includes","push","children","className","map","pokeAttributes","image","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/components/PokemonResults/index.jsx"],"sourcesContent":["import PokeCard from \"../PokeCard\";\r\n\r\nfunction PokemonResults (props) {\r\n    \r\n    const finalPokemons = [];\r\n    let controlVariable = 0;\r\n    \r\n    while (finalPokemons.length < 4 ) {\r\n        console.log('Entrou!');\r\n        console.log('controlVariable:', controlVariable);\r\n\r\n        const filteredType_Habitat = props.attributes.filter(\r\n            attr => attr.type1 === props.pokemonResults[controlVariable].type_habitat || \r\n            attr.type2 === props.pokemonResults[controlVariable].type_habitat || \r\n            attr.habitat === props.pokemonResults[controlVariable].type_habitat);\r\n\r\n        const filteredColor = filteredType_Habitat.filter(pokeColor => pokeColor.color === props.answersResults.color);\r\n\r\n        for (let pokemonName in filteredColor) {\r\n            let currentName = filteredColor[pokemonName].name\r\n            let newIndex = props.evolutions.findIndex(group => group.first === currentName || group.second === currentName || group.third === currentName );\r\n            console.log(newIndex)\r\n            // colocar numeros aleatórios para dar chance de vir pokemons evoluidos tbm\r\n\r\n            if (finalPokemons.includes(props.evolutions[newIndex].first || props.evolutions[newIndex].second || props.evolutions[newIndex].third)) {\r\n                continue\r\n            }\r\n\r\n            finalPokemons.push(filteredColor[pokemonName].name)\r\n\r\n            console.log('Nome:' , filteredColor[pokemonName]);\r\n            console.log('Índice:', newIndex);\r\n            console.log('Lista final:', finalPokemons);\r\n        }\r\n        controlVariable++\r\n    }\r\n        \r\n\r\n\r\n    // console.log('filteredType_Habitat:', filteredType_Habitat);\r\n    // console.log('filteredColor:', filteredColor)\r\n\treturn (\r\n\t\t<section>\r\n                <div className=\"card-container\">\r\n                {finalPokemons.map(pokeAttributes => {\r\n                return <PokeCard key={pokeAttributes.name} name={pokeAttributes.name} image={pokeAttributes.image}/>\r\n                })}\r\n                </div>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default PokemonResults;\r\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,cAAcA,CAAEC,KAAK,EAAE;EAE5B,MAAMC,aAAa,GAAG,EAAE;EACxB,IAAIC,eAAe,GAAG,CAAC;EAEvB,OAAOD,aAAa,CAACE,MAAM,GAAG,CAAC,EAAG;IAC9BC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBD,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,eAAe,CAAC;IAEhD,MAAMI,oBAAoB,GAAGN,KAAK,CAACO,UAAU,CAACC,MAAM,CAChDC,IAAI,IAAIA,IAAI,CAACC,KAAK,KAAKV,KAAK,CAACW,cAAc,CAACT,eAAe,CAAC,CAACU,YAAY,IACzEH,IAAI,CAACI,KAAK,KAAKb,KAAK,CAACW,cAAc,CAACT,eAAe,CAAC,CAACU,YAAY,IACjEH,IAAI,CAACK,OAAO,KAAKd,KAAK,CAACW,cAAc,CAACT,eAAe,CAAC,CAACU,YAAY,CAAC;IAExE,MAAMG,aAAa,GAAGT,oBAAoB,CAACE,MAAM,CAACQ,SAAS,IAAIA,SAAS,CAACC,KAAK,KAAKjB,KAAK,CAACkB,cAAc,CAACD,KAAK,CAAC;IAE9G,KAAK,IAAIE,WAAW,IAAIJ,aAAa,EAAE;MACnC,IAAIK,WAAW,GAAGL,aAAa,CAACI,WAAW,CAAC,CAACE,IAAI;MACjD,IAAIC,QAAQ,GAAGtB,KAAK,CAACuB,UAAU,CAACC,SAAS,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,KAAKN,WAAW,IAAIK,KAAK,CAACE,MAAM,KAAKP,WAAW,IAAIK,KAAK,CAACG,KAAK,KAAKR,WAAY,CAAC;MAC/IhB,OAAO,CAACC,GAAG,CAACiB,QAAQ,CAAC;MACrB;;MAEA,IAAIrB,aAAa,CAAC4B,QAAQ,CAAC7B,KAAK,CAACuB,UAAU,CAACD,QAAQ,CAAC,CAACI,KAAK,IAAI1B,KAAK,CAACuB,UAAU,CAACD,QAAQ,CAAC,CAACK,MAAM,IAAI3B,KAAK,CAACuB,UAAU,CAACD,QAAQ,CAAC,CAACM,KAAK,CAAC,EAAE;QACnI;MACJ;MAEA3B,aAAa,CAAC6B,IAAI,CAACf,aAAa,CAACI,WAAW,CAAC,CAACE,IAAI,CAAC;MAEnDjB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAGU,aAAa,CAACI,WAAW,CAAC,CAAC;MACjDf,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEiB,QAAQ,CAAC;MAChClB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,aAAa,CAAC;IAC9C;IACAC,eAAe,EAAE;EACrB;;EAIA;EACA;EACH,oBACCJ,OAAA;IAAAiC,QAAA,eACcjC,OAAA;MAAKkC,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAC9B9B,aAAa,CAACgC,GAAG,CAACC,cAAc,IAAI;QACrC,oBAAOpC,OAAA,CAACF,QAAQ;UAA2ByB,IAAI,EAAEa,cAAc,CAACb,IAAK;UAACc,KAAK,EAAED,cAAc,CAACC;QAAM,GAA5ED,cAAc,CAACb,IAAI;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA0D,CAAC;MACpG,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEZ;AAACC,EAAA,GAhDQzC,cAAc;AAkDvB,eAAeA,cAAc;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}