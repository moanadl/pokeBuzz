{"ast":null,"code":"import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n\nexport const GetAPIData = async () => {\n  try {\n    const endpoints = {\n      dataPokemon: [],\n      dataSpecies: [],\n      dataEvolution: [],\n      dataNature: []\n    };\n    const endpointsPokemons = [];\n    const endpointsSpecies = [];\n    const endpointsEvolution = [];\n    const endpointsNature = [];\n    for (let i = 1; i <= 6; i++) {\n      endpointsPokemons.push(`https://pokeapi.co/api/v2/pokemon/${i}`);\n      endpointsSpecies.push(`https://pokeapi.co/api/v2/pokemon-species/${i}`);\n      endpointsNature.push(`https://pokeapi.co/api/v2/nature/${i}`);\n    }\n    for (let i = 1; i <= 6; i++) {\n      //78\n      endpointsEvolution.push(`https://pokeapi.co/api/v2/evolution-chain/${i}`);\n    }\n    const resultsPokemon = await axios.all(endpointsPokemons.map(endpointPokemon => axios.get(endpointPokemon)));\n    const resultsSpecies = await axios.all(endpointsSpecies.map(endpointSpecies => axios.get(endpointSpecies)));\n    const resultsEvolution = await axios.all(endpointsEvolution.map(endpointEvolution => axios.get(endpointEvolution)));\n    const resultsNature = await axios.all(endpointsNature.map(endpointNature => axios.get(endpointNature)));\n    endpoints.dataPokemon.push(resultsPokemon);\n    endpoints.dataSpecies.push(resultsSpecies);\n    endpoints.dataEvolution.push(resultsEvolution);\n    endpoints.dataNature.push(resultsNature);\n    return endpoints;\n  } catch (error) {\n    console.log('An error occured:', error);\n  }\n};\n_c = GetAPIData;\nvar _c;\n$RefreshReg$(_c, \"GetAPIData\");","map":{"version":3,"names":["axios","GetAPIData","endpoints","dataPokemon","dataSpecies","dataEvolution","dataNature","endpointsPokemons","endpointsSpecies","endpointsEvolution","endpointsNature","i","push","resultsPokemon","all","map","endpointPokemon","get","resultsSpecies","endpointSpecies","resultsEvolution","endpointEvolution","resultsNature","endpointNature","error","console","log","_c","$RefreshReg$"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/services/index.jsx"],"sourcesContent":["import axios from \"axios\";\r\n// import { useEffect, useState } from \"react\";\r\n\r\n\r\nexport const GetAPIData = async () => {\r\n        try {\r\n            const endpoints = {\r\n                dataPokemon: [],\r\n                dataSpecies: [],\r\n                dataEvolution: [],\r\n                dataNature: []\r\n            };\r\n\r\n            const endpointsPokemons = [];\r\n            const endpointsSpecies = [];\r\n            const endpointsEvolution = [];\r\n            const endpointsNature = [];\r\n            \r\n            for (let i = 1; i <= 6; i++) {\r\n                endpointsPokemons.push(`https://pokeapi.co/api/v2/pokemon/${i}`);\r\n                endpointsSpecies.push(`https://pokeapi.co/api/v2/pokemon-species/${i}`)\r\n                endpointsNature.push(`https://pokeapi.co/api/v2/nature/${i}`)\r\n            }\r\n            \r\n            for (let i = 1; i <= 6; i++) { //78\r\n                endpointsEvolution.push(`https://pokeapi.co/api/v2/evolution-chain/${i}`)\r\n            }\r\n            const resultsPokemon = await axios.all(endpointsPokemons.map(endpointPokemon => axios.get(endpointPokemon)));\r\n            const resultsSpecies = await axios.all(endpointsSpecies.map(endpointSpecies => axios.get(endpointSpecies)));\r\n            const resultsEvolution = await axios.all(endpointsEvolution.map(endpointEvolution => axios.get(endpointEvolution)));\r\n            const resultsNature = await axios.all(endpointsNature.map(endpointNature => axios.get(endpointNature)));\r\n\r\n            endpoints.dataPokemon.push(resultsPokemon);\r\n            endpoints.dataSpecies.push(resultsSpecies);\r\n            endpoints.dataEvolution.push(resultsEvolution);\r\n            endpoints.dataNature.push(resultsNature);\r\n            \r\n            return endpoints;\r\n            \r\n        } catch (error) {\r\n            console.log('An error occured:', error);\r\n        }\r\n\r\n  };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;;AAGA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAI;IACA,MAAMC,SAAS,GAAG;MACdC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,EAAE;MACfC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE;IAChB,CAAC;IAED,MAAMC,iBAAiB,GAAG,EAAE;IAC5B,MAAMC,gBAAgB,GAAG,EAAE;IAC3B,MAAMC,kBAAkB,GAAG,EAAE;IAC7B,MAAMC,eAAe,GAAG,EAAE;IAE1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MACzBJ,iBAAiB,CAACK,IAAI,CAAC,qCAAqCD,CAAC,EAAE,CAAC;MAChEH,gBAAgB,CAACI,IAAI,CAAC,6CAA6CD,CAAC,EAAE,CAAC;MACvED,eAAe,CAACE,IAAI,CAAC,oCAAoCD,CAAC,EAAE,CAAC;IACjE;IAEA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAAE;MAC3BF,kBAAkB,CAACG,IAAI,CAAC,6CAA6CD,CAAC,EAAE,CAAC;IAC7E;IACA,MAAME,cAAc,GAAG,MAAMb,KAAK,CAACc,GAAG,CAACP,iBAAiB,CAACQ,GAAG,CAACC,eAAe,IAAIhB,KAAK,CAACiB,GAAG,CAACD,eAAe,CAAC,CAAC,CAAC;IAC5G,MAAME,cAAc,GAAG,MAAMlB,KAAK,CAACc,GAAG,CAACN,gBAAgB,CAACO,GAAG,CAACI,eAAe,IAAInB,KAAK,CAACiB,GAAG,CAACE,eAAe,CAAC,CAAC,CAAC;IAC3G,MAAMC,gBAAgB,GAAG,MAAMpB,KAAK,CAACc,GAAG,CAACL,kBAAkB,CAACM,GAAG,CAACM,iBAAiB,IAAIrB,KAAK,CAACiB,GAAG,CAACI,iBAAiB,CAAC,CAAC,CAAC;IACnH,MAAMC,aAAa,GAAG,MAAMtB,KAAK,CAACc,GAAG,CAACJ,eAAe,CAACK,GAAG,CAACQ,cAAc,IAAIvB,KAAK,CAACiB,GAAG,CAACM,cAAc,CAAC,CAAC,CAAC;IAEvGrB,SAAS,CAACC,WAAW,CAACS,IAAI,CAACC,cAAc,CAAC;IAC1CX,SAAS,CAACE,WAAW,CAACQ,IAAI,CAACM,cAAc,CAAC;IAC1ChB,SAAS,CAACG,aAAa,CAACO,IAAI,CAACQ,gBAAgB,CAAC;IAC9ClB,SAAS,CAACI,UAAU,CAACM,IAAI,CAACU,aAAa,CAAC;IAExC,OAAOpB,SAAS;EAEpB,CAAC,CAAC,OAAOsB,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,KAAK,CAAC;EAC3C;AAEN,CAAC;AAACG,EAAA,GAvCS1B,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}