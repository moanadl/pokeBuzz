{"ast":null,"code":"var _jsxFileName = \"C:\\\\Moana_SSD\\\\WebDev\\\\Projetos\\\\pokebuzz\\\\src\\\\components\\\\PokemonResults\\\\index.jsx\";\nimport PokeCard from \"../PokeCard\";\nimport \"./pokemonResults.css\";\nimport { findPokemon } from \"../../utils/findPokemon\";\n\n// ---------- Finds the final 6 pokemons and render them ---------- //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokemonResults(props) {\n  /*    let chosenPokemon = [];\r\n      const chosenPokemonEvolutionsIndex = [];\r\n      let indexFinalScore = 0;\r\n      let numOfColors = 9;\r\n      const colors = ['Black', 'Blue', 'Brown', 'Gray', 'Green', 'Pink', 'Purple', 'Red', 'Yellow', 'White'];\r\n  \r\n      const randomColor = () => {\r\n          let rdmNum = Math.floor(Math.random() * numOfColors);\r\n          return colors[rdmNum];\r\n      }\r\n      \r\n      // ----- While the number of pokemon is smaller than 6, do the loop -----\r\n      while (chosenPokemon.length < 6 ) {\r\n  \r\n          let alternativeColor = randomColor();\r\n  \r\n          const possiblePokemon = props.pokemonAttributes.filter(\r\n              attr => attr.type1 === props.finalScore[indexFinalScore].type_habitat || \r\n              attr.type2 === props.finalScore[indexFinalScore].type_habitat || \r\n              attr.habitat === props.finalScore[indexFinalScore].type_habitat)\r\n              .filter(pokeColor => pokeColor.color === props.formAnswers.color ||\r\n              pokeColor.color === alternativeColor);\r\n  \r\n          // colocar para shuffle cores tbm\r\n  \r\n          let possiblePokemonCopy = possiblePokemon.map((x) => x);\r\n             \r\n          const shuffle = (myArray) => { \r\n              for (let i = myArray.length - 1; i > 0; i--) { \r\n                  const j = Math.floor(Math.random() * (i + 1)); \r\n                  [myArray[i], myArray[j]] = [myArray[j], myArray[i]]; \r\n              } \r\n              return myArray; \r\n          }; \r\n  \r\n          const possiblePokemonShuffled = shuffle(possiblePokemonCopy);\r\n          console.log('possiblePokemonShuffled', possiblePokemonShuffled)\r\n  \r\n          for (let pokemonIndex in possiblePokemonShuffled) {\r\n              let currentPokemon = possiblePokemonShuffled[pokemonIndex].name;\r\n              let pokemonID = possiblePokemonShuffled[pokemonIndex].id;\r\n              console.log('currentPokemon', currentPokemon);\r\n              let evolutionsIndex = props.evolutionsGroups.findIndex(evolution => evolution.first === currentPokemon || evolution.second === currentPokemon || evolution.third === currentPokemon );\r\n    \r\n              if (pokemonID === 144 || pokemonID === 145 || pokemonID === 146 || pokemonID === 149) {\r\n                  console.log('Pokemon muito raro!!');\r\n                  continue\r\n              }\r\n  \r\n              if (evolutionsIndex !== -1) { \r\n                  if (chosenPokemonEvolutionsIndex.includes(evolutionsIndex)) {\r\n                      console.log('Já tem uma evolução!')\r\n                      continue\r\n                  }\r\n              } else {\r\n                  if (chosenPokemonEvolutionsIndex.includes(currentPokemon)) {\r\n                      console.log('Já tem esse Pokémon!')\r\n                      continue\r\n                  }\r\n              }\r\n  \r\n              chosenPokemon = [...chosenPokemon, possiblePokemonShuffled[pokemonIndex]]\r\n              chosenPokemonEvolutionsIndex.push(evolutionsIndex);\r\n              \r\n              if (chosenPokemon.length === 6) {\r\n                  break\r\n              }\r\n  \r\n          }\r\n          indexFinalScore++\r\n      }\r\n      console.log('SAIU DO WHILE!!!!!!!')*/\n\n  const chosenPokemon = findPokemon(props);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"images/logo-pokemon.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: chosenPokemon.map(attr => {\n        return /*#__PURE__*/_jsxDEV(PokeCard, {\n          name: attr.name,\n          image: attr.image\n        }, attr.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 3\n  }, this);\n}\n_c = PokemonResults;\nexport default PokemonResults;\nvar _c;\n$RefreshReg$(_c, \"PokemonResults\");","map":{"version":3,"names":["PokeCard","findPokemon","jsxDEV","_jsxDEV","PokemonResults","props","chosenPokemon","children","className","src","fileName","_jsxFileName","lineNumber","columnNumber","map","attr","name","image","_c","$RefreshReg$"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/components/PokemonResults/index.jsx"],"sourcesContent":["import PokeCard from \"../PokeCard\";\r\nimport \"./pokemonResults.css\";\r\nimport { findPokemon } from \"../../utils/findPokemon\";\r\n\r\n// ---------- Finds the final 6 pokemons and render them ---------- //\r\nfunction PokemonResults (props) {\r\n    \r\n/*    let chosenPokemon = [];\r\n    const chosenPokemonEvolutionsIndex = [];\r\n    let indexFinalScore = 0;\r\n    let numOfColors = 9;\r\n    const colors = ['Black', 'Blue', 'Brown', 'Gray', 'Green', 'Pink', 'Purple', 'Red', 'Yellow', 'White'];\r\n\r\n    const randomColor = () => {\r\n        let rdmNum = Math.floor(Math.random() * numOfColors);\r\n        return colors[rdmNum];\r\n    }\r\n    \r\n    // ----- While the number of pokemon is smaller than 6, do the loop -----\r\n    while (chosenPokemon.length < 6 ) {\r\n\r\n        let alternativeColor = randomColor();\r\n\r\n        const possiblePokemon = props.pokemonAttributes.filter(\r\n            attr => attr.type1 === props.finalScore[indexFinalScore].type_habitat || \r\n            attr.type2 === props.finalScore[indexFinalScore].type_habitat || \r\n            attr.habitat === props.finalScore[indexFinalScore].type_habitat)\r\n            .filter(pokeColor => pokeColor.color === props.formAnswers.color ||\r\n            pokeColor.color === alternativeColor);\r\n\r\n        // colocar para shuffle cores tbm\r\n\r\n        let possiblePokemonCopy = possiblePokemon.map((x) => x);\r\n           \r\n        const shuffle = (myArray) => { \r\n            for (let i = myArray.length - 1; i > 0; i--) { \r\n                const j = Math.floor(Math.random() * (i + 1)); \r\n                [myArray[i], myArray[j]] = [myArray[j], myArray[i]]; \r\n            } \r\n            return myArray; \r\n        }; \r\n\r\n        const possiblePokemonShuffled = shuffle(possiblePokemonCopy);\r\n        console.log('possiblePokemonShuffled', possiblePokemonShuffled)\r\n\r\n        for (let pokemonIndex in possiblePokemonShuffled) {\r\n            let currentPokemon = possiblePokemonShuffled[pokemonIndex].name;\r\n            let pokemonID = possiblePokemonShuffled[pokemonIndex].id;\r\n            console.log('currentPokemon', currentPokemon);\r\n            let evolutionsIndex = props.evolutionsGroups.findIndex(evolution => evolution.first === currentPokemon || evolution.second === currentPokemon || evolution.third === currentPokemon );\r\n  \r\n            if (pokemonID === 144 || pokemonID === 145 || pokemonID === 146 || pokemonID === 149) {\r\n                console.log('Pokemon muito raro!!');\r\n                continue\r\n            }\r\n\r\n            if (evolutionsIndex !== -1) { \r\n                if (chosenPokemonEvolutionsIndex.includes(evolutionsIndex)) {\r\n                    console.log('Já tem uma evolução!')\r\n                    continue\r\n                }\r\n            } else {\r\n                if (chosenPokemonEvolutionsIndex.includes(currentPokemon)) {\r\n                    console.log('Já tem esse Pokémon!')\r\n                    continue\r\n                }\r\n            }\r\n\r\n            chosenPokemon = [...chosenPokemon, possiblePokemonShuffled[pokemonIndex]]\r\n            chosenPokemonEvolutionsIndex.push(evolutionsIndex);\r\n            \r\n            if (chosenPokemon.length === 6) {\r\n                break\r\n            }\r\n\r\n        }\r\n        indexFinalScore++\r\n    }\r\n    console.log('SAIU DO WHILE!!!!!!!')*/\r\n\r\n    const chosenPokemon = findPokemon(props);\r\n\r\n\treturn (\r\n\t\t<section>\r\n            <div className=\"results-logo\">\r\n                <img src=\"images/logo-pokemon.png\" />\r\n            </div>\r\n            <div className=\"card-container\">\r\n                {chosenPokemon.map(attr => {\r\n                return <PokeCard key={attr.name} name={attr.name} image={attr.image}/>\r\n                })}\r\n            </div>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default PokemonResults;\r\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,aAAa;AAClC,OAAO,sBAAsB;AAC7B,SAASC,WAAW,QAAQ,yBAAyB;;AAErD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,cAAcA,CAAEC,KAAK,EAAE;EAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,MAAMC,aAAa,GAAGL,WAAW,CAACI,KAAK,CAAC;EAE3C,oBACCF,OAAA;IAAAI,QAAA,gBACUJ,OAAA;MAAKK,SAAS,EAAC,cAAc;MAAAD,QAAA,eACzBJ,OAAA;QAAKM,GAAG,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACNV,OAAA;MAAKK,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAC1BD,aAAa,CAACQ,GAAG,CAACC,IAAI,IAAI;QAC3B,oBAAOZ,OAAA,CAACH,QAAQ;UAAiBgB,IAAI,EAAED,IAAI,CAACC,IAAK;UAACC,KAAK,EAAEF,IAAI,CAACE;QAAM,GAA9CF,IAAI,CAACC,IAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAsC,CAAC;MACtE,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEZ;AAACK,EAAA,GAzFQd,cAAc;AA2FvB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}