{"ast":null,"code":"var _jsxFileName = \"C:\\\\Moana_SSD\\\\WebDev\\\\Projetos\\\\pokebuzz\\\\src\\\\components\\\\Question\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Option from \"../Option\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Question(props) {\n  _s();\n  // const colorOptions = ['Black', 'Blue', 'Brown', 'Gray', 'Green', 'Pink', 'Purple', 'Red', 'Yellow', 'White'];\n  // const transportationOptions = ['Car', 'Airplane', 'Ship', 'Train', 'By foot'];\n  // const settingOptions = ['Countryside', 'Beach', 'Mountain', 'City', 'Cave'];\n  // const naturalPhenomenonOptions = ['Volcano', 'Earthquake', 'Tsunami', 'Hurricane', 'Storm', 'Sand storm', 'Blizzard'];\n  // const activityOptions = ['Pool party', 'Work out', 'Circus', 'Stay in and chill', 'Rally', 'Hiking'];\n  // const chillOptions = ['Gym', 'Cemetery', 'Mall', 'Pool', 'Library', 'Park', 'Sauna'];\n  // const taylorOptions = ['Debut', 'Fearless', 'Speak Now', 'Red', '1989', 'Reputation', 'Lover', 'Folklore', 'Evermore', 'Midnights', 'The Tortured Poets Department'];\n\n  const options = {\n    colorOptions: ['Black', 'Blue', 'Brown', 'Gray', 'Green', 'Pink', 'Purple', 'Red', 'Yellow', 'White'],\n    transportationOptions: ['Car', 'Airplane', 'Ship', 'Train', 'By foot'],\n    settingOptions: ['Countryside', 'Beach', 'Mountain', 'City', 'Cave'],\n    naturalPhenomenonOptions: ['Volcano', 'Earthquake', 'Tsunami', 'Hurricane', 'Storm', 'Sand storm', 'Blizzard'],\n    activityOptions: ['Pool party', 'Work out', 'Circus', 'Stay in and chill', 'Rally', 'Hiking'],\n    chillOptions: ['Gym', 'Cemetery', 'Mall', 'Pool', 'Library', 'Park', 'Sauna'],\n    taylorOptions: ['Debut', 'Fearless', 'Speak Now', 'Red', '1989', 'Reputation', 'Lover', 'Folklore', 'Evermore', 'Midnights', 'The Tortured Poets Department']\n  };\n  console.log(Object.values(options)[0].key);\n  const [color, setColor] = useState('');\n  const [transportation, setTransportation] = useState('');\n  const [setting, setSetting] = useState('');\n  const [naturalPhenomenon, setNaturalPhenomenon] = useState('');\n  const [activity, setActivity] = useState('');\n  const [placeToChill, setPlaceToChill] = useState('');\n  const [taylorAlbum, setTaylorAlbum] = useState('');\n  const getSelectionValue = e => {\n    console.log(e.target.value);\n    if (e.target.name === 'color') {\n      setColor(e.target.value);\n    } else if (e.target.name === 'transportation') {\n      setTransportation(e.target.value);\n    } else if (e.target.name === 'setting') {\n      setSetting(e.target.value);\n    } else if (e.target.name === 'naturalPhenomenon') {\n      setNaturalPhenomenon(e.target.value);\n    } else if (e.target.name === 'activity') {\n      setActivity(e.target.value);\n    } else if (e.target.name === 'placeToChill') {\n      setPlaceToChill(e.target.value);\n    } else if (e.target.name === 'taylorAlbum') {\n      setTaylorAlbum(e.target.value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), Object.values(options)[props.index].map(option => /*#__PURE__*/_jsxDEV(Option, {\n        id: `option-${option.toLowerCase()}`,\n        name: \"color\",\n        value: option.toLowerCase(),\n        content: option,\n        getData: getSelectionValue\n      }, `option-${option.toLowerCase()}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 68\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Question, \"5IS6+td5gA7cZm7dfRwFETkaGLk=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["useState","Option","jsxDEV","_jsxDEV","Fragment","_Fragment","Question","props","_s","options","colorOptions","transportationOptions","settingOptions","naturalPhenomenonOptions","activityOptions","chillOptions","taylorOptions","console","log","Object","values","key","color","setColor","transportation","setTransportation","setting","setSetting","naturalPhenomenon","setNaturalPhenomenon","activity","setActivity","placeToChill","setPlaceToChill","taylorAlbum","setTaylorAlbum","getSelectionValue","e","target","value","name","children","label","fileName","_jsxFileName","lineNumber","columnNumber","index","map","option","id","toLowerCase","content","getData","_c","$RefreshReg$"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/components/Question/index.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport Option from \"../Option\";\r\n\r\nfunction Question (props) {\r\n\r\n    // const colorOptions = ['Black', 'Blue', 'Brown', 'Gray', 'Green', 'Pink', 'Purple', 'Red', 'Yellow', 'White'];\r\n    // const transportationOptions = ['Car', 'Airplane', 'Ship', 'Train', 'By foot'];\r\n    // const settingOptions = ['Countryside', 'Beach', 'Mountain', 'City', 'Cave'];\r\n    // const naturalPhenomenonOptions = ['Volcano', 'Earthquake', 'Tsunami', 'Hurricane', 'Storm', 'Sand storm', 'Blizzard'];\r\n    // const activityOptions = ['Pool party', 'Work out', 'Circus', 'Stay in and chill', 'Rally', 'Hiking'];\r\n    // const chillOptions = ['Gym', 'Cemetery', 'Mall', 'Pool', 'Library', 'Park', 'Sauna'];\r\n    // const taylorOptions = ['Debut', 'Fearless', 'Speak Now', 'Red', '1989', 'Reputation', 'Lover', 'Folklore', 'Evermore', 'Midnights', 'The Tortured Poets Department'];\r\n\r\n    const options = {\r\n        colorOptions: ['Black', 'Blue', 'Brown', 'Gray', 'Green', 'Pink', 'Purple', 'Red', 'Yellow', 'White'],\r\n        transportationOptions: ['Car', 'Airplane', 'Ship', 'Train', 'By foot'],\r\n        settingOptions: ['Countryside', 'Beach', 'Mountain', 'City', 'Cave'],\r\n        naturalPhenomenonOptions: ['Volcano', 'Earthquake', 'Tsunami', 'Hurricane', 'Storm', 'Sand storm', 'Blizzard'],\r\n        activityOptions: ['Pool party', 'Work out', 'Circus', 'Stay in and chill', 'Rally', 'Hiking'],\r\n        chillOptions: ['Gym', 'Cemetery', 'Mall', 'Pool', 'Library', 'Park', 'Sauna'],\r\n        taylorOptions: ['Debut', 'Fearless', 'Speak Now', 'Red', '1989', 'Reputation', 'Lover', 'Folklore', 'Evermore', 'Midnights', 'The Tortured Poets Department']\r\n    }\r\n\r\n    console.log(Object.values(options)[0].key);\r\n\r\n\r\n\r\n    const [color, setColor] = useState('');\r\n\tconst [transportation, setTransportation] = useState('');\r\n\tconst [setting, setSetting] = useState('');\r\n\tconst [naturalPhenomenon, setNaturalPhenomenon] = useState('');\r\n\tconst [activity, setActivity] = useState('');\r\n\tconst [placeToChill, setPlaceToChill] = useState('');\r\n\tconst [taylorAlbum, setTaylorAlbum] = useState('');\r\n\t\r\n\tconst getSelectionValue = (e) => {\r\n\t\tconsole.log(e.target.value)\r\n\r\n\t\tif (e.target.name === 'color') {\r\n\t\t\tsetColor(e.target.value);\r\n\t\t} else if (e.target.name === 'transportation') {\r\n\t\t\tsetTransportation(e.target.value);\r\n\t\t} else if (e.target.name === 'setting') {\r\n\t\t\tsetSetting(e.target.value);\r\n\t\t} else if (e.target.name === 'naturalPhenomenon') {\r\n\t\t\tsetNaturalPhenomenon(e.target.value);\r\n\t\t} else if (e.target.name === 'activity') {\r\n\t\t\tsetActivity(e.target.value);\r\n\t\t} else if (e.target.name === 'placeToChill') {\r\n\t\t\tsetPlaceToChill(e.target.value);\r\n\t\t} else if (e.target.name === 'taylorAlbum') {\r\n\t\t\tsetTaylorAlbum(e.target.value);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n        <>\r\n            <fieldset>\r\n                <legend>{props.label}</legend>\r\n                {Object.values(options)[props.index].map(option => <Option key={`option-${option.toLowerCase()}`} id={`option-${option.toLowerCase()}`} name='color' value={option.toLowerCase()} content={option} getData={getSelectionValue}/>)}\r\n            </fieldset>\r\n            {/* <fieldset>\r\n                <legend>{props.label}</legend>\r\n                {colorOptions.map(color => <Option key={`option-${color.toLowerCase()}`} id={`option-${color.toLowerCase()}`} name='color' value={color.toLowerCase()} content={color} getData={getSelectionValue}/>)}\r\n            </fieldset>\r\n            <fieldset>\r\n            <legend>Choose a transportation:</legend>\r\n                {transportationOptions.map(transportation => <Option key={`option-${transportation.toLowerCase()}`} id={`option-${transportation.toLowerCase()}`} name='transportation' value={transportation.toLowerCase()} content={transportation} getData={getSelectionValue}/>)}\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>Choose a setting:</legend>\r\n                {settingOptions.map(setting => <Option key={`option-${setting.toLowerCase()}`} id={`option-${setting.toLowerCase()}`} name='setting' value={setting.toLowerCase()} content={setting} getData={getSelectionValue}/>)}\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>Choose a natural phenomenon:</legend>\r\n                {naturalPhenomenonOptions.map(phenomenon => <Option key={`option-${phenomenon.toLowerCase().replace(/\\s+/g, '-')}`} id={`option-${phenomenon.toLowerCase().replace(/\\s+/g, '-')}`} name='naturalPhenomenon' value={phenomenon.toLowerCase().replace(/\\s+/g, '')} content={phenomenon} getData={getSelectionValue}/>)}\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>Choose something to do:</legend>\r\n                {activityOptions.map(activity => <Option key={`option-${activity.toLowerCase().replace(/\\s+/g, '-')}`} id={`option-${activity.toLowerCase().replace(/\\s+/g, '-')}`} name='activity' value={activity.toLowerCase().replace(/\\s+/g, '')} content={activity} getData={getSelectionValue}/>)}\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>Choose a place to chill:</legend>\r\n                {chillOptions.map(chill => <Option key={`option-${chill.toLowerCase()}`} id={`option-${chill.toLowerCase()}`} name='placeToChill' value={chill.toLowerCase()} content={chill} getData={getSelectionValue}/>)}\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>Choose a Taylor Swift album:</legend>\r\n                {taylorOptions.map(taylor => <Option key={`option-${taylor.toLowerCase().replace(/\\s+/g, '-')}`} id={`option-${taylor.toLowerCase().replace(/\\s+/g, '-')}`} name='taylorAlbum' value={taylor.toLowerCase().replace(/\\s+/g, '')} content={taylor} getData={getSelectionValue}/>)}\r\n            </fieldset> */}\r\n\r\n        </>\r\n\t)\r\n}\r\n\r\nexport default Question;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}