{"ast":null,"code":"var _jsxFileName = \"C:\\\\Moana_SSD\\\\WebDev\\\\Projetos\\\\pokebuzz\\\\src\\\\components\\\\PokemonResults\\\\index.jsx\";\nimport PokeCard from \"../PokeCard\";\n\n// ---------- Finds the final 6 pokemons and render them ---------- //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokemonResults(props) {\n  const finalPokemons = [];\n  const controlArray = [];\n  let controlVariable = 0;\n  console.log(props.evolutions);\n\n  // ----- While the number of pokemon is smaller than 6, do the loop -----\n  while (finalPokemons.length < 6) {\n    console.log('Entrou!');\n    console.log('controlVariable:', controlVariable);\n    const filteredType_Habitat = props.pokemonAttributes.filter(attr => attr.type1 === props.pokemonResults[controlVariable].type_habitat || attr.type2 === props.pokemonResults[controlVariable].type_habitat || attr.habitat === props.pokemonResults[controlVariable].type_habitat);\n    console.log(filteredType_Habitat);\n    let filteredColor = filteredType_Habitat.filter(pokeColor => pokeColor.color === props.formAnswers.color || pokeColor.color === 'yellow');\n    console.log(filteredColor);\n\n    // if (filteredColor.length === 0) {\n    //     for (let i = 1; i <= 6; i++) {\n    //         filteredColor = filteredType_Habitat.filter(pokeColor => pokeColor.color === 'yellow');\n    //         if (filteredColor.length > 0) {\n    //             break\n    //         }\n    //     }\n    // }\n\n    // Colocar para ao invés de escolher a cor preferida, rankear as cores.\n\n    for (let pokemonName in filteredColor) {\n      let currentName = filteredColor[pokemonName].name;\n      let newIndex = props.evolutions.findIndex(group => group.first === currentName || group.second === currentName || group.third === currentName);\n      console.log(newIndex);\n      // colocar numeros aleatórios para dar chance de vir pokemons evoluidos tbm\n\n      if (controlArray.includes(props.evolutions[newIndex].first || props.evolutions[newIndex].second || props.evolutions[newIndex].third)) {\n        continue;\n      }\n      if (finalPokemons.length >= 6) {\n        break;\n      }\n      finalPokemons.push(filteredColor[pokemonName]);\n      controlArray.push(filteredColor[pokemonName].name);\n\n      // console.log('Nome:' , filteredColor[pokemonName]);\n      // console.log('Índice:', newIndex);\n      // console.log('Lista final:', finalPokemons);\n    }\n    controlVariable++;\n  }\n\n  // console.log('filteredType_Habitat:', filteredType_Habitat);\n  // console.log('filteredColor:', filteredColor)\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: finalPokemons.map(pokeAttributes => {\n        return /*#__PURE__*/_jsxDEV(PokeCard, {\n          name: pokeAttributes.name,\n          image: pokeAttributes.image\n        }, pokeAttributes.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n}\n_c = PokemonResults;\nexport default PokemonResults;\nvar _c;\n$RefreshReg$(_c, \"PokemonResults\");","map":{"version":3,"names":["PokeCard","jsxDEV","_jsxDEV","PokemonResults","props","finalPokemons","controlArray","controlVariable","console","log","evolutions","length","filteredType_Habitat","pokemonAttributes","filter","attr","type1","pokemonResults","type_habitat","type2","habitat","filteredColor","pokeColor","color","formAnswers","pokemonName","currentName","name","newIndex","findIndex","group","first","second","third","includes","push","children","className","map","pokeAttributes","image","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Moana_SSD/WebDev/Projetos/pokebuzz/src/components/PokemonResults/index.jsx"],"sourcesContent":["import PokeCard from \"../PokeCard\";\r\n\r\n// ---------- Finds the final 6 pokemons and render them ---------- //\r\nfunction PokemonResults (props) {\r\n    \r\n    const finalPokemons = [];\r\n    const controlArray = [];\r\n    let controlVariable = 0;\r\n\r\n    console.log(props.evolutions)\r\n    \r\n    // ----- While the number of pokemon is smaller than 6, do the loop -----\r\n    while (finalPokemons.length < 6 ) {\r\n        console.log('Entrou!');\r\n        console.log('controlVariable:', controlVariable);\r\n\r\n        const filteredType_Habitat = props.pokemonAttributes.filter(\r\n            attr => attr.type1 === props.pokemonResults[controlVariable].type_habitat || \r\n            attr.type2 === props.pokemonResults[controlVariable].type_habitat || \r\n            attr.habitat === props.pokemonResults[controlVariable].type_habitat\r\n        );\r\n\r\n        console.log(filteredType_Habitat)\r\n        let filteredColor = filteredType_Habitat.filter(pokeColor => pokeColor.color === props.formAnswers.color || pokeColor.color === 'yellow');\r\n\r\n        console.log(filteredColor)\r\n\r\n        // if (filteredColor.length === 0) {\r\n        //     for (let i = 1; i <= 6; i++) {\r\n        //         filteredColor = filteredType_Habitat.filter(pokeColor => pokeColor.color === 'yellow');\r\n        //         if (filteredColor.length > 0) {\r\n        //             break\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        // Colocar para ao invés de escolher a cor preferida, rankear as cores.\r\n\r\n        for (let pokemonName in filteredColor) {\r\n            let currentName = filteredColor[pokemonName].name\r\n            let newIndex = props.evolutions.findIndex(group => group.first === currentName || group.second === currentName || group.third === currentName );\r\n            console.log(newIndex)\r\n            // colocar numeros aleatórios para dar chance de vir pokemons evoluidos tbm\r\n\r\n            if (controlArray.includes(props.evolutions[newIndex].first || props.evolutions[newIndex].second || props.evolutions[newIndex].third)) {\r\n                continue\r\n            }\r\n\r\n            if (finalPokemons.length >= 6) {\r\n                break\r\n            }\r\n            \r\n            finalPokemons.push(filteredColor[pokemonName])\r\n            controlArray.push(filteredColor[pokemonName].name)\r\n\r\n            // console.log('Nome:' , filteredColor[pokemonName]);\r\n            // console.log('Índice:', newIndex);\r\n            // console.log('Lista final:', finalPokemons);\r\n        }\r\n        controlVariable++\r\n    }\r\n        \r\n\r\n\r\n    // console.log('filteredType_Habitat:', filteredType_Habitat);\r\n    // console.log('filteredColor:', filteredColor)\r\n\treturn (\r\n\t\t<section>\r\n                <div className=\"card-container\">\r\n                {finalPokemons.map(pokeAttributes => {\r\n                return <PokeCard key={pokeAttributes.name} name={pokeAttributes.name} image={pokeAttributes.image}/>\r\n                })}\r\n                </div>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default PokemonResults;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}